module_error=0
module purge
module_error=$(expr $? + $module_error)

module load sems-env
module_error=$(expr $? + $module_error)

module load sems-python/2.7.9
module_error=$(expr $? + $module_error)

module load sems-swig/3.0.10
module_error=$(expr $? + $module_error)

module load sems-cmake/3.5.2
module_error=$(expr $? + $module_error)

module load sems-gcc/4.8.4
module_error=$(expr $? + $module_error)

module load sems-openmpi/1.8.7
module_error=$(expr $? + $module_error)

module load sems-boost/1.55.0/base
module_error=$(expr $? + $module_error)

module load sems-superlu/4.3/base
module_error=$(expr $? + $module_error)

module load sems-netcdf/4.3.2/parallel
module_error=$(expr $? + $module_error)

module load sems-hdf5/1.8.12/parallel
module_error=$(expr $? + $module_error)

module load sems-scotch/6.0.3/nopthread_64bit_parallel
module_error=$(expr $? + $module_error)

module load sems-parmetis/4.0.3/64bit_parallel
module_error=$(expr $? + $module_error)

module load sems-numpy/1.9.1/base
module_error=$(expr $? + $module_error)

module load sems-mpi4py/2.0.0
module_error=$(expr $? + $module_error)

if [[ $module_error != 0 ]]; then
  echo "Error loading modules."
fi

#implement sick and wrong hack to work around bad link of libpcre in swig
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/ascldap/users/bmpersc/horrible_swig_hack

#env var to inspect to make sure the trilinos env is loaded correctly.
export TRILINOS_RELEASE_ENV=1
