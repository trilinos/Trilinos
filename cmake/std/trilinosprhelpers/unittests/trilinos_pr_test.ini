#
# Configuration .ini file for Trilinos Pull Request Testing
# =========================================================
#
# This file is organized by sections [section_name] where each section defines
# a set of key-value pairs.  Keys and values can be separated by ':' or "=" delimiters
# and both keys and values can have spaces.
#
# In this application, we split our keys into two values and the value side is handled
# based on what the `command` is:
#
#     <command> <key> : <value>
#
# Commands
# --------
# - module-use: <path>
#   + This defines a path for the module system to use to discover modules.
#
# - module-load <module name> : <version>
#   + This defines a module to be loaded. This is equivalent to a `$ module load <modulename>/<version>` command.
#
# - module-unload <module name> :
#   + Instructs the handler to unload a module. This is the same as a `$ module unload <modulename>` command.
#   + Note: There is no `version` argument needed for this command, and it will be ignored if provided.
#
# - module-remove <module name> :
#   + This will _remove_ a module from the list of actions. This is different from `module-unload` in that
#     it fully removes the module from the list of actions before they are applied. This can be useful if we
#     are loading a standard set of modules and wish to remove some entries from the list. This streamlines
#     module operations by not creating the need for a `module unload` on an unecessary (or to-be-overridden)
#     module.
#
# - module-swap <module name old>/<version> : <module name new>/<version>
#   + This will execute a `$module swap module_old module_new/version`
#
# - use <SECTION_NAME>:
#   + Instructs the system to process a different section of the .ini file and insert the commands it provides
#     into the list of actions to be performed. The system will recursively process all sections included with
#     cyclic dependency detection to prevent infinite recursion.
#   + The <value> parameter is ignored for this command.
#
# - setenv <ENVVAR>: <VALUE>
#   + Sets an environment variable. This is equivalent to the bash command: `$ export ENVVAR=VALUE`
#   + Envvars will replace standard 'bash' style envvar strings ( `${ENVVAR}` ) with the contents of
#     an existing envvar. We require the curly braces in addition to the dollar sign for this but it
#     does enable appending/prepending content to existing envvars. For example:
#
#         setenv LD_LIBRARY_PATH : "${LD_LIBRARY_PATH}:/my/library/path"
#
#     If the envvar is missing a KeyError will be thrown.
#
#   + Note: envvars are processed _after_ modules are when the settings are applied.
#
# - unsetenv <ENVVAR>
#   + Unsets an environment variable.
#
# Tips and Tricks
# ---------------
#
# #### Multiple Entries to an ENVVAR
# Adding multiple entries to an environment variable can result in a very long string being added that may not
# be easy to maintain aesthetically. Unfortunately, we cannot insert multiple setenv lines with the same envvar
# within the same section due to a key-conflict. One workaround for this is to use temp envvars and then unset
# them when you're done.  For example:
#
# setenv PATH_TMP  : "/my/first/path/to/prepend:${PATH}"
# setenv PATH      : "/my/second/path/to/prepend:${PATH_TMP}"
# unsetenv PATH_TMP:
#
# #### Nonconforming Sections
# Since this file is essentially just a .ini style file that can be processed via the configparser module in
# Python, you can add additional sections that do not conform to the setEnvironment style. These will be ignored
# unless you attempt to load them by either providing the section name to the class constructor _or_ try to
# load them via a `use <section>` operation.
#
# =====================================================================================================================

[CONFIG_SCRIPT_MAP]
# A nonconforming section containing a map of JENKINS_JOB_NAME -> JOB_SPECIFIC_CMAKE_FILE
# This section won't be parsed by setEnvironment unless we add it to the configurations.

# Clang Builds
Trilinos_pullrequest_clang_7.0.1:      PullRequestLinuxClang7.0.1TestingSettings.cmake
Trilinos_pullrequest_clang_9.0.0:      PullRequestLinuxClang9.0.0TestingSettings.cmake

# CUDA Testing
Trilinos_pullrequest_cuda_9.2:         PullRequestLinuxCuda9.2TestingSettings.cmake
Trilinos_pullrequest_cuda_10.1.105:         PullRequestLinuxCuda10.1.105TestingSettings.cmake

# GCC Builds
Trilinos_pullrequest_gcc_4.8.4:        PullRequestLinuxGCC4.8.4TestingSettings.cmake
Trilinos_pullrequest_gcc_4.9.3_SERIAL: PullRequestLinuxGCC4.9.3TestingSettingsSERIAL.cmake
Trilinos_pullrequest_gcc_7.2.0:        PullRequestLinuxGCC7.2.0TestingSettings.cmake
Trilinos_pullrequest_gcc_8.3.0:        PullRequestLinuxGCC8.3.0TestingSettings.cmake

# Intel Builds
Trilinos_pullrequest_intel_17.0.1:     PullRequestLinuxIntel17.0.1TestingSettings.cmake
Trilinos_pullrequest_intel_19.0.5:     PullRequestLinuxIntel19.0.5TestingSettings.cmake

# Python PR Driver Builds
#Trilinos_pullrequest_python_2:         PullRequestLinuxPython2.cmake
Trilinos_pullrequest_python_3:         PullRequestLinuxPython3.cmake

# Installation Testing
Trilinos_pullrequest_gcc_8.3.0_installation_testing: PullRequestLinuxGCC8.3.0TestingSettingsInstallation.cmake



[ENABLE_MAP]
# Entries in the ENABLE_MAP get inserted into the files:
# - `packageEnables.cmake`
# - `package_subproject_list.cmake` and
# instead of using the TriBiTS tool to determine changes.
Trilinos_pullrequest_python_2: TrilinosFrameworkTests
Trilinos_pullrequest_python_3: TrilinosFrameworkTests
Trilinos_pullrequest_gcc_8.3.0_installation_testing A: Teuchos
Trilinos_pullrequest_gcc_8.3.0_installation_testing B: Tpetra



[PR_JOB_PARAMETERS]
# Section for global job parameters
# max-test-parallelism is the max parallelism any given test will have.
#     for example, if one test runs with 4 OpenMP threads, we would set
#     this to 4.
max-test-parallelism : 4



[SEMS-ENV]
module-purge:
module-use: /projects/sems/modulefiles/projects
module-load sems-env:



[SEMS-DEFAULT]
use SEMS-ENV:
module-load sems-openmpi  : 1.10.1
module-load sems-boost    : 1.63.0/base
module-load sems-zlib     : 1.2.8/base
module-load sems-hdf5     : 1.10.6/parallel
module-load sems-netcdf   : 4.7.3/parallel
module-load sems-parmetis : 4.0.3/parallel
module-load sems-scotch   : 6.0.3/nopthread_64bit_parallel
module-load sems-superlu  : 4.3/base
module-load sems-git      : 2.10.1
module-load sems-cmake    : 3.10.3
module-load sems-python   : 2.7.9
setenv OMP_NUM_THREADS    : 2



[ATDM-ENV]
module-load atdm-env:



[ATDM-DEFAULT]
use ATDM-ENV:
module-load atdm-ninja_fortran: 1.7.2



[Trilinos_pullrequest_gcc_4.8.4]
use SEMS-ENV:
use ATDM-ENV:
module-load sems-gcc: 4.8.4
use SEMS-DEFAULT:
use ATDM-DEFAULT:



[Trilinos_pullrequest_gcc_4.9.3_SERIAL]
use SEMS-ENV:
use ATDM-ENV:
module-load sems-gcc: 4.9.3
use SEMS-DEFAULT:
use ATDM-DEFAULT:
module-remove sems-hdf5:
module-remove sems-netcdf:
module-remove sems-openmpi:
module-remove sems-parmetis:
module-remove sems-scotch:
module-load sems-hdf5: 1.10.6/base
module-load sems-netcdf: 4.7.3/base
module-load sems-metis: 5.1.0/base
setenv OMP_NUM_THREADS: 1




[Trilinos_pullrequest_gcc_7.2.0]
use SEMS-ENV:
use ATDM-ENV:
module-load sems-gcc: 7.2.0
use SEMS-DEFAULT:
use ATDM-DEFAULT:



[Trilinos_pullrequest_gcc_8.3.0]
use SEMS-ENV:
use ATDM-ENV:
module-load sems-gcc: 8.3.0
module-load sems-ninja_fortran: 1.10.0
use SEMS-DEFAULT:
use ATDM-DEFAULT:
# module-load sems-cmake: 3.17.1



[Trilinos_pullrequest_intel_17.0.1]
use SEMS-ENV:
use ATDM-ENV:
module-load sems-gcc: 4.9.3
module-load sems-intel: 17.0.1
module-load sems-mpich: 3.2
use SEMS-DEFAULT:
use ATDM-DEFAULT:



[Trilinos_pullrequest_intel_19.0.5]
use SEMS-ENV:
use ATDM-ENV:
module-load sems-gcc: 6.1.0
module-load sems-intel: _19.0.5
module-load sems-mpich: 3.2
use SEMS-DEFAULT:
use ATDM-DEFAULT:



[Trilinos_pullrequest_clang_7.0.1]
use SEMS-ENV:
use ATDM-ENV:
module-load sems-gcc: 5.3.0
module-load sems-clang: 7.0.1
use SEMS-DEFAULT:
use ATDM-DEFAULT:
module-load sems-cmake: 3.12.2



[Trilinos_pullrequest_clang_9.0.0]
use SEMS-ENV:
use ATDM-ENV:
module-load sems-gcc: 5.3.0
module-load sems-clang: 9.0.0
use SEMS-DEFAULT:
use ATDM-DEFAULT:
module-remove sems-cmake:
module-load sems-cmake: 3.12.2



[Trilinos_pullrequest_clang_10.0.0]
use SEMS-ENV:
module-load sems-git: 2.10.1
module-load sems-gcc: 5.3.0
module-load sems-clang: 10.0.0
module-load sems-openmpi: 1.10.1
#module-load sems-python: 3.5.2
use SIERRA-PYTHON-3.6.3:
module-load sems-boost: 1.69.0/base
module-load sems-zlib: 1.2.8/base
module-load sems-hdf5: 1.10.6/parallel
module-load sems-netcdf: 4.7.3/parallel
module-load sems-parmetis: 4.0.3/parallel
module-load sems-scotch: 6.0.3/nopthread_64bit_parallel
module-load sems-superlu: 4.3/base
module-load sems-cmake: 3.17.1
module-load sems-ninja_fortran: 1.10.0
setenv OMP_NUM_THREADS: 2



[Trilinos_pullrequest_cuda_9.2]
module-load git: 2.10.1
module-load devpack: 20180521/openmpi/2.1.2/gcc/7.2.0/cuda/9.2.88
module-swap openblas/0.2.20/gcc/7.2.0: netlib/3.8.0/gcc/7.2.0
setenv OMPI_CXX: ${WORKSPACE}/Trilinos/packages/kokkos/bin/nvcc_wrapper
setenv OMPI_CC: ${CC}
setenv OMPI_FC: ${FC}
setenv CUDA_LAUNCH_BLOCKING: 1
setenv CUDA_MANAGED_FORCE_DEVICE_ALLOC: 1
setenv PATH_TMP: /ascldap/users/rabartl/install/white-ride/ninja-1.8.2/bin:${PATH}
setenv PATH:     /ascldap/users/rabartl/install/white-ride/cmake-3.11.2/bin:${PATH_TMP}
unsetenv PATH_TMP:



[Trilinos_pullrequest_cuda_10.1.105]
module-load git: 2.10.1
module-load devpack: 20190404/openmpi/4.0.1/gcc/7.2.0/cuda/10.1.105
module-swap openblas/0.3.4/gcc/7.4.0: netlib/3.8.0/gcc/7.2.0
setenv OMPI_CXX: ${WORKSPACE}/Trilinos/packages/kokkos/bin/nvcc_wrapper
setenv OMPI_CC: ${CC}
setenv OMPI_FC: ${FC}
setenv CUDA_LAUNCH_BLOCKING: 1
setenv CUDA_MANAGED_FORCE_DEVICE_ALLOC: 1
setenv PATH_TMP: /ascldap/users/rabartl/install/white-ride/ninja-1.8.2/bin:${PATH}
setenv PATH:     /ascldap/users/rabartl/install/white-ride/cmake-3.11.2/bin:${PATH_TMP}
unsetenv PATH_TMP:



[Trilinos_pullrequest_gcc_8.3.0_installation_testing]
use Trilinos_pullrequest_gcc_8.3.0:


#[Trilinos_pullrequest_python_2]
#use SEMS-ENV:
#use ATDM-ENV:
#module-load sems-gcc: 7.2.0
#use ATDM-DEFAULT:
#module-load sems-git: 2.10.1
#module-load sems-cmake: 3.10.3
#module-unload sems-python:
#setenv PYTHONPATH: /projects/sierra/linux_rh7/install/Python/extras/lib/python2.7/site-packages
#setenv MANPATH:    /projects/sierra/linux_rh7/install/Python/2.7.15/share/man
#setenv PATH_TMP:   /projects/sierra/linux_rh7/install/Python/extras/bin:${PATH}
#setenv PATH:       /projects/sierra/linux_rh7/install/Python/2.7.15/share/bin:${PATH_TMP}
#unsetenv PATH_TMP:


[Trilinos_pullrequest_python_3]
use SEMS-ENV              :
use ATDM-ENV              :
module-load sems-gcc      : 7.2.0
use ATDM-DEFAULT          :
module-load sems-git      : 2.10.1
module-load sems-cmake    : 3.10.3
module-unload sems-python :
setenv PYTHONPATH         : /projects/sierra/linux_rh7/install/Python/extras/lib/python/3.6/site-packages
setenv MANPATH            : /projects/sierra/linux_rh7/install/Python/3.6.3/share/man
setenv PATH_TMP           : /projects/sierra/linux_rh7/install/Python/extras/bin:${PATH}
setenv PATH               : /projects/sierra/linux_rh7/install/Python/3.6.3/share/bin:${PATH_TMP}
unsetenv PATH_TMP         :
