#! ${Python3_EXECUTABLE}
# -*- python -*-

# @HEADER
# ***********************************************************************
#
#          PyTrilinos: Python Interfaces to Trilinos Packages
#                 Copyright (2014) Sandia Corporation
#
# Under the terms of Contract DE-AC04-94AL85000 with Sandia
# Corporation, the U.S. Government retains certain rights in this
# software.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. Neither the name of the Corporation nor the names of the
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY SANDIA CORPORATION "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL SANDIA CORPORATION OR THE
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Questions? Contact William F. Spotz (wfspotz@sandia.gov)
#
# ***********************************************************************
# @HEADER

"""
PyTrilinos.Isorropia is the python interface to the Trilinos
partitioning and load balancing package Isorropia:

    https://trilinos.org/docs/dev/packages/isorropia/doc/html/index.html

The purpose of Isorropia is to ....

"""

# We need to avoid the following being generated by SWIG:
#
#     class IsorropiaClass(__init__.Operator):
#
# So we put all of the classes, etc., that would logically go into this
# __init__.py file into a sub-module called "Base". SWIG will then generate
#
#     class IsorropiaClass(Base.Operator):
#
# and to make that work, we just import the Base module:
from . import Base

# Users, on the other hand, don't want to reference Isorropia.Base, because the
# Base namespace is not a part of Trilinos. Users want to do this:
#
#    class MyClass(Isorropia.Operator):
#
# and we make that work by creating a reference to all of the symbols in Base
# in this module, while preserving certain special variables:
this_name = __name__
this_doc  = __doc__
this_file = __file__
try:
    this_cached = __cached__
    this_loader = __loader__
    this_spec   = __spec__
except NameError:
    pass

globals().update(Base.__dict__)

__name__ = this_name
__doc__  = this_doc
__file__ = this_file
try:
    __cached__ = this_cached
    __loader__ = this_loader
    __spec__   = this_spec
except NameError:
    pass

# Note that this infrastructure means that Isorropia.Base.Name and Isorropia.Name
# are both references to the same object.

# Take care of importing all other sub-modules
__all__ = [ ]
if "${PyTrilinos_ENABLE_Epetra}".upper() not in ("", "0", "FALSE", "N", "NO", "OFF"):
    # Epetra namespace
    __all__.append("Epetra")
    from . import Epetra
