/*
// @HEADER
// ***********************************************************************
//
//          PyTrilinos: Python Interfaces to Trilinos Packages
//                 Copyright (2014) Sandia Corporation
//
// Under the terms of Contract DE-AC04-94AL85000 with Sandia
// Corporation, the U.S. Government retains certain rights in this
// software.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
// 1. Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright
// notice, this list of conditions and the following disclaimer in the
// documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the Corporation nor the names of the
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY SANDIA CORPORATION "AS IS" AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL SANDIA CORPORATION OR THE
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Questions? Contact William F. Spotz (wfspotz@sandia.gov)
//
// ***********************************************************************
// @HEADER
*/

/* cmake/PyTrilinos_config.h.in.  Modified from version in src/.  */

/* define if we want to use MPI */
#cmakedefine HAVE_MPI

/* define if we want to use Mpi4Py */
#cmakedefine HAVE_MPI4PY

/* Define if want to build with Amesos enabled */
#cmakedefine HAVE_PYTRILINOS_AMESOS

/* Define if want to build with Anasazi enabled */
#cmakedefine HAVE_PYTRILINOS_ANASAZI

/* Define if want to build with AztecOO enabled */
#cmakedefine HAVE_PYTRILINOS_AZTECOO

/* Define if want to build AztecOO-Teuchos */
#cmakedefine HAVE_PYTRILINOS_AZTECOO_TEUCHOS

/* Define if Domi is enabled */
#cmakedefine HAVE_PYTRILINOS_DOMI

/* Define if want to build with Epetra enabled */
#cmakedefine HAVE_PYTRILINOS_EPETRA

/* Define if want to build with EpetraExt enabled */
#cmakedefine HAVE_PYTRILINOS_EPETRAEXT

/* Define if want to build with EpetraExt enabled */
#cmakedefine HAVE_PYTRILINOS_EPETRAEXT_MODEL_EVALUATOR

/* Define if want to build EpetraExt-hdf5 */
#cmakedefine HAVE_PYTRILINOS_EPETRAEXT_HDF5

/* Define if want to build with Galeri enabled */
#cmakedefine HAVE_PYTRILINOS_GALERI

/* Define if want to build with Ifpack enabled */
#cmakedefine HAVE_PYTRILINOS_IFPACK

/* Define if want to build with Isorropia enabled */
#cmakedefine HAVE_PYTRILINOS_ISORROPIA

/* Define if want to build with Kokkos enabled */
#cmakedefine HAVE_PYTRILINOS_KOKKOS

/* Define if want to build with Komplex enabled */
#cmakedefine HAVE_PYTRILINOS_KOMPLEX

/* Define if want to build with LOCA enabled */
#cmakedefine HAVE_PYTRILINOS_LOCA

/* Define if want to build with ML enabled */
#cmakedefine HAVE_PYTRILINOS_ML

/* Define ML options */
#define MLAPI_LC

/* Define if want to build with NOX enabled */
#cmakedefine HAVE_PYTRILINOS_NOX

/* Define if want to build NOX-Epetra */
#cmakedefine HAVE_PYTRILINOS_NOX_EPETRA

/* Define if want to build NOX-Epetra with EpetraExt */
#cmakedefine HAVE_PYTRILINOS_NOX_EPETRAEXT

/* Define if Petsc namespace is enabled within NOX */
#cmakedefine HAVE_PYTRILINOS_NOX_PETSC

/* Define if want to build with Tpetra enabled */
#cmakedefine HAVE_PYTRILINOS_TPETRA

/* Define if want to build with TriUtils enabled */
#cmakedefine HAVE_PYTRILINOS_TRIUTILS

/**********************************************************************/

/* PyTrilinos ordinal types */

#define PYTRILINOS_GLOBAL_ORD long long
#define PYTRILINOS_LOCAL_ORD  int

/**********************************************************************/

/* Define a null string */

#define PYTRILINOS_NULLSTR

/**********************************************************************/

#ifdef SWIG

  #define COMPILER_ID @CMAKE_CXX_COMPILER_ID@

  #if COMPILER_ID == Clang
    #if ! defined(__clang__)
      #define __clang__
    #endif
  #endif

  #if COMPILER_ID == GNU
    #if ! defined(__GNUC__)
      #define __GNUC__
    #endif
  #endif

  #if COMPILER_ID == Intel
    #if ! defined(__INTEL_COMPILER)
      #define __INTEL_COMPILER
    #endif
  #endif

#endif
