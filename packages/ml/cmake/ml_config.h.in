/* src/cmake/ml_config.h.in.  Generated from configure.ac by autoheader.  */

/* Define to dummy `main' function (if any) required to link to the Fortran
   libraries. */

/* Define the Fortran name mangling to be used for the BLAS */
#ifndef F77_BLAS_MANGLE
 #cmakedefine F77_BLAS_MANGLE@F77_BLAS_MANGLE@
#endif

/* Define to dummy `main' function (if any) required to link to the Fortran
   libraries. */
#cmakedefine F77_DUMMY_MAIN

/* Define to a macro mangling the given C identifier (in lower and upper
   case), which must not contain underscores, for linking with Fortran. */
#ifndef F77_FUNC
 #cmakedefine F77_FUNC@F77_FUNC@
#endif

/* As F77_FUNC, but for C identifiers containing underscores. */
#ifndef F77_FUNC_
 #cmakedefine F77_FUNC_@F77_FUNC_@
#endif

/* Define if F77 and FC dummy `main' functions are identical. */
#cmakedefine FC_DUMMY_MAIN_EQ_F77

/* Define if you have a BLAS library. */
#cmakedefine HAVE_BLAS

/* define if bool is a built-in type */
#cmakedefine HAVE_BOOL

/* Define if the C complier supports __PRETTY_FUNCTION__ */
#cmakedefine HAVE_CFUNC

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H @HAVE_INTTYPES_H@

/* Define if you have LAPACK library. */
#cmakedefine HAVE_LAPACK

/* Define if want to build libcheck */
#cmakedefine HAVE_LIBCHECK

/* Define if want to build with ml enabled */
#cmakedefine HAVE_ML_AMESOS

/* Define if want to build with ml enabled */
#cmakedefine HAVE_ML_AZTECOO

/* Define if want to build with ml_benchmarking enabled */
#cmakedefine HAVE_ML_BENCHMARKING

/* Define if want to build with ml_complex_maxwell enabled */
#cmakedefine HAVE_ML_COMPLEX_MAXWELL

/* Define if want to build with ml_enrich enabled */
#cmakedefine HAVE_ML_ENRICH

/* Define if want to build with ml enabled */
#cmakedefine HAVE_ML_EPETRA

/* Define if want to build with ml enabled */
#cmakedefine HAVE_ML_EPETRAEXT

/* Define if want to build with ml_flops enabled */
#cmakedefine HAVE_ML_FLOPS

/* Define if want to build with ml enabled */
#cmakedefine HAVE_ML_GALERI

/* Define if want to build with ml enabled */
#cmakedefine HAVE_ML_IFPACK

/* Define if want to build with ml enabled */
#cmakedefine HAVE_ML_ISORROPIA

/* Define if want to build ml-matlab */
#cmakedefine HAVE_ML_MATLAB

/* Define if want to build with ml_memory_checking enabled */
#cmakedefine HAVE_ML_MEMORY_CHECK

/* Define if want to build with ml_metis enabled */
#cmakedefine HAVE_ML_METIS

/* Define if want to build with ml_newtpe enabled */
#cmakedefine HAVE_ML_NEW_T_PE

/* Define if want to build with ml_parasails enabled */
#cmakedefine HAVE_ML_PARASAILS

/* Define if want to build with ml_parmetis enabled */
#cmakedefine HAVE_ML_PARMETIS

/* Define if want to build with ml_parpack enabled */
#cmakedefine HAVE_ML_PARPACK

/* Define if want to build with ml_superlu1 enabled */
#cmakedefine HAVE_ML_SUPERLU1_0

/* Define if want to build with ml_superlu2 enabled */
#cmakedefine HAVE_ML_SUPERLU2_0

/* Define if want to build with ml_superlu4 enabled */
#cmakedefine HAVE_ML_SUPERLU4_0

/* Define if want to build with ml_superlu_dist enabled */
#cmakedefine HAVE_ML_SUPERLU_DIST

/* Define if want to build with ml enabled */
#cmakedefine HAVE_ML_TEUCHOS

/* Define if want to build with ml_timing enabled */
#cmakedefine HAVE_ML_TIMING

/* Define if want to build with ml_zoltan enabled */
#cmakedefine HAVE_ML_ZOLTAN

/* Define if want to build with ml_zoltan3 enabled */
#cmakedefine HAVE_ML_ZOLTAN_THREE

/* define if we want to use MPI */
#cmakedefine HAVE_MPI

/* define if the compiler accepts the new for scoping rules */
#cmakedefine HAVE_NEW_FOR_SCOPING

/* Define if want to build with petsc enabled */
#cmakedefine HAVE_ML_PETSC

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H @HAVE_STDINT_H@

/* Support for 64-bit integers */
#cmakedefine ML_BIG_INT

/* mallinfo with ML */
#cmakedefine ML_MALLINFO

/* Support for multiple right hand sides. */
#cmakedefine ML_MULTIPLE_RHS_BLOCK_FACTOR

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS @STDC_HEADERS@

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#cmakedefine inline
#endif

/* Define to rpl_malloc if the replacement function should be used. */
#cmakedefine malloc

/* Turn on Teko smoothers, this is a circular dependency use at your own risk */
#cmakedefine HAVE_ML_TekoSmoothers
