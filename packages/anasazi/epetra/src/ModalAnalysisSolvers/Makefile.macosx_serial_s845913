################## Trilinos Defines ##########################

TRILINOS_ARCH = MACOSX

TRILINOS_FORTRAN_UNDERSCORE = TRILINOS_HAVE_FORTRAN_UNDERSCORE

TRILINOS_DEFINES = -D$(TRILINOS_ARCH) -DHAVE_CONFIG_H \
                   $(EPETRA_ARCH_DEFINES)

################## Trilinos Component Includes ##########################

# The Trilinos build environment will use the following locations when
# looking for header files

TRILINOS_HOME = /Users/ulhetma/Library/Trilinos

TRILINOS_INCLUDES = -I$(TRILINOS_HOME)/MACOSX.SERIAL/include

################## Trilinos Libraries ##########################

# The Trilinos build environment will use the following locations for building,
# storing and using its own libraries

LIBAZTECOO = -laztecoo
LIBEPETRA = -lepetra
LIBEPETRAEXT = -lepetraext
LIBIFPACK = -lifpack
LIBTRIUTILS = -ltriutils
LIBML = -lml

TRILINOS_LIBRARIES = -L$(TRILINOS_HOME)/MACOSX.SERIAL/lib \
                     $(LIBIFPACK) $(LIBAZTECOO) $(LIBML)\
                     $(LIBTRIUTILS) $(LIBEPETRAEXT) $(LIBEPETRA)

############## Machine dependent definitions ##################

#Define include directories (remember to use -Idirectory_name)
ARCH_INCLUDES :=

#Define libraries
ARCH_LIBRARIES = -framework vecLib -lm -lg2c

#Define compilers
#Apple Computer, Inc. GCC version 1151, based on gcc version 3.1 20020420 (prerelease)
CC      = gcc
CXX     = g++
FC      = g77
RANLIB  = ranlib -s
LINKER  = $(CXX)
AR      = ar
ARFLAGS = rcv
LN      = ln -s

.SUFFIXES : .o .cc .cpp

.cpp.o:
	$(CXX) $(CXXFLAGS) -c $<

.cc.o:
	$(CXX) $(CXXFLAGS) -c $<

################## External Include ##########################

EXTERNAL_DEFINES =

################## External Include ##########################

EXTERNAL_INCLUDES =

################## External Libraries ##########################

LIBARPACK = /Users/ulhetma/Library/ARPACK/libarpack_MACOSX.a

EXTERNAL_LIBRARIES = $(LIBARPACK)

################# Code dependent section #######################

DEFINES= $(ARCH_DEFINES) $(TRILINOS_DEFINES) $(EXTERNAL_DEFINES)

INCLUDES = $(ARCH_INCLUDES) $(TRILINOS_INCLUDES) \
           $(EXTERNAL_INCLUDES)

CFLAGS= -O $(DEFINES) $(INCLUDES)
FFLAGS= -O $(DEFINES) $(INCLUDES)
CXXFLAGS = -O $(DEFINES) $(INCLUDES)

#CFLAGS= -g -ftrapv -ansi -pedantic -Wall -Weffc++ $(DEFINES) $(INCLUDES)
#FFLAGS= -g $(DEFINES) $(INCLUDES)
#CXXFLAGS = -g -ftrapv -ansi -pedantic -Wall -Weffc++ $(DEFINES) $(INCLUDES)

LDFLAGS = $(ARCH_LDFLAGS)

LIB_PATHS = $(TRILINOS_LIBRARIES) \
            $(EXTERNAL_LIBRARIES) \
            $(ARCH_LIBRARIES)

#=======================================================================

OFILE = mydsaupd.o mydsaup2.o \
        BlockDACG.o BRQMIN.o \
        LOBPCG.o LOBPCG_light.o KnyazevLOBPCG.o \
        ARPACKm3.o ModifiedARPACKm3.o \
        Davidson.o JDPCG.o \
        AMGOperator.o singularCoarse.o MyIncompleteChol.o \
        BlockPCGSolver.o \
        ModeLaplace1DQ1.o ModeLaplace2DQ1.o ModeLaplace3DQ1.o \
        ModeLaplace1DQ2.o ModeLaplace2DQ2.o ModeLaplace3DQ2.o \
        ModalTools.o CheckingTools.o SortingTools.o \
        MyMemory.o FortranRoutines.o

driver: $(OFILE) driver.o
	$(LINKER) $(LDFLAGS) $(OFILE) driver.o $(LIB_PATHS) -o driver.serial

clean:
	rm -f *.o *.serial;

