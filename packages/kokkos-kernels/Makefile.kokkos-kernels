# Path settings
KOKKOSKERNELS_PATH ?= ${HOME}/Kokkos/kokkos-kernels
KOKKOS_PATH ?= ${KOKKOSKERNELS_PATH}/../kokkos
KOKKOSKERNELS_INSTALL_PATH ?= ${CURDIR}/install

# What to instantiate

# double, float, complex<double>, complex<float>
KOKKOSKERNELS_SCALARS ?= double
KOKKOSKERNELS_LAYOUTS ?= LayoutLeft,LayoutRight
KOKKOSKERNELS_SPACES ?= $(KOKKOS_DEVICES),HostSpace
KOKKOSKERNELS_ORDINALS ?= int,int64_t
KOKKOSKERNELS_OFFSETS ?= int,size_t

# mkl, blas
KOKKOSKERNELS_ENABLE_TPLS ?= ""
# eti-only
KOKKOSKERNELS_OPTIONS ?= ""

KOKKOSKERNELS_INTERNAL_ENABLE_BLAS := $(strip $(shell echo $(KOKKOSKERNELS_ENABLE_TPLS) | grep "blas" | wc -l))
KOKKOSKERNELS_INTERNAL_ENABLE_MKL := $(strip $(shell echo $(KOKKOSKERNELS_ENABLE_TPLS) | grep "mkl" | wc -l))
KOKKOSKERNELS_INTERNAL_ENABLE_CUSPARSE := $(strip $(shell echo $(KOKKOSKERNELS_ENABLE_TPLS) | grep "cusparse" | wc -l))
KOKKOSKERNELS_INTERNAL_ENABLE_CUBLAS := $(strip $(shell echo $(KOKKOSKERNELS_ENABLE_TPLS) | grep "cublas" | wc -l))

BLAS_PATH ?= /usr
BLAS_LIBS ?= -L${BLAS_PATH}/lib64 $(BLAS_LIBRARIES) -lgfortran -lgomp

MKL_PATH ?= ${SEMS_INTEL_ROOT}/mkl
MKL_LIBS ?= -L${MKL_PATH}/lib/intel64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread -lm -ldl -L${MKL_PATH}/../compiler/lib/intel64

default-kokkos-kernels: kokkoskernels-build-lib
	echo "Start Build"


CXXFLAGS ?= -g -O3
LINKFLAGS ?= -g -O3
KOKKOSKERNELS_INTERNAL_LIBRARY = libkokkos_kernels.a
KOKKOSKERNELS_LIBS = -lkokkos_kernels
KOKKOSKERNELS_LDFLAGS = -L./

KOKKOSKERNELSCOMMON_CPPFLAGS= -I$(KOKKOSKERNELS_PATH)/src/common
KOKKOSBLAS_CPPFLAGS= -I$(KOKKOSKERNELS_PATH)/src/blas -I$(KOKKOSKERNELS_PATH)/src/blas/impl
KOKKOSSPARSE_CPPFLAGS= -I$(KOKKOSKERNELS_PATH)/src/sparse -I$(KOKKOSKERNELS_PATH)/src/sparse/impl
KOKKOSGRAPH_CPPFLAGS= -I$(KOKKOSKERNELS_PATH)/src/graph -I$(KOKKOSKERNELS_PATH)/src/graph/impl 
KOKKOSBATCHED_CPPFLAGS= -I$(KOKKOSKERNELS_PATH)/src/batched 

KOKKOSKERNELS_CPPFLAGS = -I$(KOKKOSKERNELS_PATH)/src -I$(KOKKOSKERNELS_PATH)/src/impl -I$(KOKKOSKERNELS_PATH)/src/impl/tpls $(KOKKOSSPARSE_CPPFLAGS) $(KOKKOSGRAPH_CPPFLAGS) $(KOKKOSKERNELUTILS_CPPFLAGS) $(KOKKOSBLAS_CPPFLAGS) $(KOKKOSBATCHED_CPPFLAGS) $(KOKKOSKERNELSCOMMON_CPPFLAGS)

KOKKOSKERNELS_LINK_DEPENDS = $(KOKKOSKERNELS_INTERNAL_LIBRARY)

LINK ?= ${CXX}

ifndef KOKKOS_CXXFLAGS
  include $(KOKKOS_PATH)/Makefile.kokkos
endif


#=========================================================================
#==== Generate KokkosKernels_config.h ====================================
#=========================================================================

tmp := $(shell echo "/* ---------------------------------------------" > KokkosKernels_config.tmp)
tmp := $(shell echo "Makefile constructed configuration:" >> KokkosKernels_config.tmp)
tmp := $(shell date >> KokkosKernels_config.tmp)
tmp := $(shell echo "----------------------------------------------*/" >> KokkosKernels_config.tmp)
tmp := $(shell echo "\#ifndef KOKKOSKERNELS_CONFIG_H_" >> KokkosKernels_config.tmp)
tmp := $(shell echo "\#define KOKKOSKERNELS_CONFIG_H_" >> KokkosKernels_config.tmp)

#==== ETI Macros Scalars =================================================
KOKKOSKERNELS_INTERNAL_INST_SCALARS =
KOKKOSKERNELS_INTERNAL_INST_DOUBLE=$(strip $(shell echo "$(KOKKOSKERNELS_SCALARS)" | grep "double" | wc -l))
KOKKOSKERNELS_INTERNAL_INST_FLOAT=$(strip $(shell echo "$(KOKKOSKERNELS_SCALARS)" | grep "float" | wc -l))
KOKKOSKERNELS_INTERNAL_INST_COMPLEX_DOUBLE_=$(strip $(shell echo "$(KOKKOSKERNELS_SCALARS)" | grep "complex<double>" | wc -l))
KOKKOSKERNELS_INTERNAL_INST_COMPLEX_FLOAT_=$(strip $(shell echo "$(KOKKOSKERNELS_SCALARS)" | grep "complex<float>" | wc -l))

tmp := $(shell echo "" >> KokkosKernels_config.tmp)
tmp := $(shell echo "/* ---------------------------------------------" >> KokkosKernels_config.tmp)
tmp := $(shell echo "ETI Scalar Types:" >> KokkosKernels_config.tmp)
tmp := $(shell echo "   ---------------------------------------------*/" >> KokkosKernels_config.tmp)

ifeq ($(KOKKOSKERNELS_INTERNAL_INST_DOUBLE), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_DOUBLE" >> KokkosKernels_config.tmp )
  KOKKOSKERNELS_INTERNAL_INST_SCALARS += "double"
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_FLOAT), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_FLOAT" >> KokkosKernels_config.tmp )
  KOKKOSKERNELS_INTERNAL_INST_SCALARS += "float"
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_COMPLEX_DOUBLE_), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_COMPLEX_DOUBLE" >> KokkosKernels_config.tmp )
  KOKKOSKERNELS_INTERNAL_INST_SCALARS += "Kokkos::complex<double>"
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_COMPLEX_FLOAT_), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_COMPLEX_FLOAT" >> KokkosKernels_config.tmp )
  KOKKOSKERNELS_INTERNAL_INST_SCALARS += "Kokkos::complex<float>"
endif
tmp := $(shell echo "\#if defined(KOKKOSKERNELS_INST_COMPLEX_DOUBLE)" >> KokkosKernels_config.tmp )
tmp := $(shell echo "\#define KOKKOSKERNELS_INST_KOKKOS_COMPLEX_DOUBLE_" >> KokkosKernels_config.tmp )
tmp := $(shell echo "\#endif" >> KokkosKernels_config.tmp )
tmp := $(shell echo "\#if defined(KOKKOSKERNELS_INST_COMPLEX_FLOAT)" >> KokkosKernels_config.tmp )
tmp := $(shell echo "\#define KOKKOSKERNELS_INST_KOKKOS_COMPLEX_FLOAT_" >> KokkosKernels_config.tmp )
tmp := $(shell echo "\#endif" >> KokkosKernels_config.tmp )


#==== ETI Macros ORDINALS =================================================
KOKKOSKERNELS_INTERNAL_INST_ORDINALS =
KOKKOSKERNELS_INTERNAL_INST_ORDINAL_INT=$(strip $(shell echo "$(KOKKOSKERNELS_ORDINALS)" | grep "int" | wc -l))
KOKKOSKERNELS_INTERNAL_INST_ORDINAL_INT64_T=$(strip $(shell echo "$(KOKKOSKERNELS_ORDINALS)" | grep "int64_t" | wc -l))

tmp := $(shell echo "" >> KokkosKernels_config.tmp)
tmp := $(shell echo "/* ---------------------------------------------" >> KokkosKernels_config.tmp)
tmp := $(shell echo "ETI Ordinal Types:" >> KokkosKernels_config.tmp)
tmp := $(shell echo "   ---------------------------------------------*/" >> KokkosKernels_config.tmp)

ifeq ($(KOKKOSKERNELS_INTERNAL_INST_ORDINAL_INT), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_ORDINAL_INT" >> KokkosKernels_config.tmp )
  KOKKOSKERNELS_INTERNAL_INST_ORDINALS += "int"
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_ORDINAL_INT64_T), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_ORDINAL_INT64_T" >> KokkosKernels_config.tmp )
  KOKKOSKERNELS_INTERNAL_INST_ORDINALS += "int64_t"
endif

#==== ETI Macros OFFSETS =================================================
KOKKOSKERNELS_INTERNAL_INST_OFFSETS =
KOKKOSKERNELS_INTERNAL_INST_OFFSET_INT=$(strip $(shell echo "$(KOKKOSKERNELS_OFFSETS)" | grep "int" | wc -l))
KOKKOSKERNELS_INTERNAL_INST_OFFSET_SIZE_T=$(strip $(shell echo "$(KOKKOSKERNELS_OFFSETS)" | grep "size_t" | wc -l))

tmp := $(shell echo "" >> KokkosKernels_config.tmp)
tmp := $(shell echo "/* ---------------------------------------------" >> KokkosKernels_config.tmp)
tmp := $(shell echo "ETI Offset Types:" >> KokkosKernels_config.tmp)
tmp := $(shell echo "   ---------------------------------------------*/" >> KokkosKernels_config.tmp)

ifeq ($(KOKKOSKERNELS_INTERNAL_INST_OFFSET_INT), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_OFFSET_INT" >> KokkosKernels_config.tmp )
  KOKKOSKERNELS_INTERNAL_INST_OFFSETS += "int"
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_OFFSET_SIZE_T), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_OFFSET_SIZE_T" >> KokkosKernels_config.tmp )
  KOKKOSKERNELS_INTERNAL_INST_OFFSETS += "size_t"
endif


#==== ETI Macros Layouts =================================================

KOKKOSKERNELS_INTERNAL_INST_LAYOUTLEFT=$(strip $(shell echo $(KOKKOSKERNELS_LAYOUTS) | grep "LayoutLeft" | wc -l))
KOKKOSKERNELS_INTERNAL_INST_LAYOUTRIGHT=$(strip $(shell echo $(KOKKOSKERNELS_LAYOUTS) | grep "LayoutRight" | wc -l))

tmp := $(shell echo "" >> KokkosKernels_config.tmp)
tmp := $(shell echo "/* ---------------------------------------------" >> KokkosKernels_config.tmp)
tmp := $(shell echo "ETI Layout Types:" >> KokkosKernels_config.tmp)
tmp := $(shell echo "   ---------------------------------------------*/" >> KokkosKernels_config.tmp)

ifeq ($(KOKKOSKERNELS_INTERNAL_INST_LAYOUTLEFT), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_LAYOUTLEFT" >> KokkosKernels_config.tmp )
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_LAYOUTRIGHT), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_LAYOUTRIGHT" >> KokkosKernels_config.tmp )
endif

#==== ETI Macros ExecutionSpaces =================================================

KOKKOSKERNELS_INTERNAL_INST_EXECSPACE_SERIAL=$(strip $(shell echo $(KOKKOSKERNELS_SPACES) | grep "Serial" | wc -l))
KOKKOSKERNELS_INTERNAL_INST_EXECSPACE_OPENMP=$(strip $(shell echo $(KOKKOSKERNELS_SPACES) | grep "OpenMP" | wc -l))
KOKKOSKERNELS_INTERNAL_INST_EXECSPACE_THREADS=$(strip $(shell echo $(KOKKOSKERNELS_SPACES) | grep "Pthread" | wc -l))
KOKKOSKERNELS_INTERNAL_INST_EXECSPACE_CUDA=$(strip $(shell echo $(KOKKOSKERNELS_SPACES) | grep "Cuda" | wc -l))

tmp := $(shell echo "" >> KokkosKernels_config.tmp)
tmp := $(shell echo "/* ---------------------------------------------" >> KokkosKernels_config.tmp)
tmp := $(shell echo "ETI ExecutionSpace Types:" >> KokkosKernels_config.tmp)
tmp := $(shell echo "   ---------------------------------------------*/" >> KokkosKernels_config.tmp)

ifeq ($(KOKKOSKERNELS_INTERNAL_INST_EXECSPACE_SERIAL), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_EXECSPACE_SERIAL" >> KokkosKernels_config.tmp )
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_EXECSPACE_OPENMP), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_EXECSPACE_OPENMP" >> KokkosKernels_config.tmp )
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_EXECSPACE_THREADS), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_EXECSPACE_THREADS" >> KokkosKernels_config.tmp )
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_EXECSPACE_CUDA), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_EXECSPACE_CUDA" >> KokkosKernels_config.tmp )
endif

#==== ETI Macros MemorySpaces =================================================

KOKKOSKERNELS_INTERNAL_INST_MEMSPACE_HOSTSPACE=$(strip $(shell echo $(KOKKOSKERNELS_SPACES) | grep "HostSpace" | wc -l))
KOKKOSKERNELS_INTERNAL_INST_MEMSPACE_HBWSPACE=$(strip $(shell echo $(KOKKOSKERNELS_SPACES) | grep "HBWSpace" | wc -l))
KOKKOSKERNELS_INTERNAL_INST_MEMSPACE_CUDASPACE=$(strip $(shell echo $(KOKKOSKERNELS_SPACES) | grep "CudaSpace" | wc -l))
KOKKOSKERNELS_INTERNAL_INST_MEMSPACE_CUDAUVMSPACE=$(strip $(shell echo $(KOKKOSKERNELS_SPACES) | grep "CudaUVMSpace" | wc -l))
KOKKOSKERNELS_INTERNAL_INST_MEMSPACE_CUDAHOSTPINNEDSPACE=$(strip $(shell echo $(KOKKOSKERNELS_SPACES) | grep "CudaHostPinnedSpace" | wc -l))

tmp := $(shell echo "" >> KokkosKernels_config.tmp)
tmp := $(shell echo "/* ---------------------------------------------" >> KokkosKernels_config.tmp)
tmp := $(shell echo "ETI Memory Space Types:" >> KokkosKernels_config.tmp)
tmp := $(shell echo "   ---------------------------------------------*/" >> KokkosKernels_config.tmp)

ifeq ($(KOKKOSKERNELS_INTERNAL_INST_MEMSPACE_HOSTSPACE), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_MEMSPACE_HOSTSPACE" >> KokkosKernels_config.tmp )
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_MEMSPACE_HBWSPACE), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_MEMSPACE_HBWSPACE" >> KokkosKernels_config.tmp )
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_MEMSPACE_CUDASPACE), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_MEMSPACE_CUDASPACE" >> KokkosKernels_config.tmp )
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_MEMSPACE_CUDAUVMSPACE), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_MEMSPACE_CUDAUVMSPACE" >> KokkosKernels_config.tmp )
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_MEMSPACE_CUDAHOSTPINNEDSPACE), 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_INST_MEMSPACE_CUDAHOSTPINNEDSPACE" >> KokkosKernels_config.tmp )
endif

ifeq ($(KOKKOSKERNELS_INTERNAL_INST_EXECSPACE_CUDA), 1)
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_MEMSPACE_CUDASPACE), 0)
    ifeq ($(KOKKOSKERNELS_INTERNAL_INST_MEMSPACE_CUDAUVMSPACE), 0)
      tmp := $(shell echo "\#define KOKKOSKERNELS_INST_MEMSPACE_CUDASPACE" >> KokkosKernels_config.tmp )
    endif
  endif
endif



#==== Third Party Libraries =================================================

tmp := $(shell echo "" >> KokkosKernels_config.tmp)
tmp := $(shell echo "/* ---------------------------------------------" >> KokkosKernels_config.tmp)
tmp := $(shell echo "Third Party Libraries:" >> KokkosKernels_config.tmp)
tmp := $(shell echo "   ---------------------------------------------*/" >> KokkosKernels_config.tmp)

ifeq (${KOKKOSKERNELS_INTERNAL_ENABLE_BLAS}, 1)
  KOKKOSKERNELS_LIBS += ${BLAS_LIBS}
  tmp := $(shell echo "\#define KOKKOSKERNELS_ENABLE_TPL_BLAS" >> KokkosKernels_config.tmp )
endif

ifeq (${KOKKOSKERNELS_INTERNAL_ENABLE_MKL}, 1)
  KOKKOSKERNELS_CPPFLAGS += -I${MKL_PATH}/include
  KOKKOSKERNELS_LIBS += ${MKL_LIBS}

  tmp := $(shell echo "\#define KOKKOSKERNELS_ENABLE_TPL_MKL" >> KokkosKernels_config.tmp )
endif

ifeq (${KOKKOSKERNELS_INTERNAL_ENABLE_CUSPARSE}, 1)
  KOKKOS_INTERNAL_NVCC_PATH := $(shell which nvcc)
  CUDA_PATH ?= $(KOKKOS_INTERNAL_NVCC_PATH:/bin/nvcc=)
  KOKKOSKERNELS_CPPFLAGS += -I${CUDA_PATH}/include
  KOKKOSKERNELS_LDFLAGS += -L${CUDA_PATH}/lib
  KOKKOSKERNELS_LIBS += -lcusparse

  tmp := $(shell echo "\#define KOKKOSKERNELS_ENABLE_TPL_CUSPARSE" >> KokkosKernels_config.tmp )
endif

ifeq (${KOKKOSKERNELS_INTERNAL_ENABLE_CUBLAS}, 1)
  KOKKOS_INTERNAL_NVCC_PATH := $(shell which nvcc)
  CUDA_PATH ?= $(KOKKOS_INTERNAL_NVCC_PATH:/bin/nvcc=)
  KOKKOSKERNELS_CPPFLAGS += -I${CUDA_PATH}/include
  KOKKOSKERNELS_LDFLAGS += -L${CUDA_PATH}/lib
  KOKKOSKERNELS_LIBS += -lcublas

  tmp := $(shell echo "\#define KOKKOSKERNELS_ENABLE_TPL_CUBLAS" >> KokkosKernels_config.tmp )
endif

  tmp := $(shell echo "\#if defined(KOKKOSKERNELS_ENABLE_TPL_MKL)" >> KokkosKernels_config.tmp )
  tmp := $(shell echo "\#if !defined(KOKKOSKERNELS_ENABLE_TPL_BLAS)" >> KokkosKernels_config.tmp )  
  tmp := $(shell echo "\#define KOKKOSKERNELS_ENABLE_TPL_BLAS" >> KokkosKernels_config.tmp )
  tmp := $(shell echo "\#endif" >> KokkosKernels_config.tmp )
  tmp := $(shell echo "\#endif" >> KokkosKernels_config.tmp )

#==== Options =================================================

tmp := $(shell echo "" >> KokkosKernels_config.tmp)
tmp := $(shell echo "/* ---------------------------------------------" >> KokkosKernels_config.tmp)
tmp := $(shell echo "Optional Settings:" >> KokkosKernels_config.tmp)
tmp := $(shell echo "   ---------------------------------------------*/" >> KokkosKernels_config.tmp)

KOKKOSKERNELS_INTERNAL_ETI_ONLY := $(strip $(shell echo $(KOKKOSKERNELS_OPTIONS) | grep "eti-only" | wc -l))

ifeq (${KOKKOSKERNELS_INTERNAL_ETI_ONLY}, 1)
  tmp := $(shell echo "\#define KOKKOSKERNELS_ETI_ONLY" >> KokkosKernels_config.tmp )
endif

#==== Put in guard for library compilations ===========================
tmp := $(shell echo "" >> KokkosKernels_config.tmp)
tmp := $(shell echo "\#ifndef KOKKOSKERNELS_IMPL_COMPILE_LIBRARY" >> KokkosKernels_config.tmp)
tmp := $(shell echo "\#define KOKKOSKERNELS_IMPL_COMPILE_LIBRARY false" >> KokkosKernels_config.tmp)
tmp := $(shell echo "\#endif " >> KokkosKernels_config.tmp)
tmp := $(shell echo "" >> KokkosKernels_config.tmp)

#==== Endif the file  =================================================

tmp := $(shell echo "\#endif // KOKKOSKERNELS_CONFIG_H_" >> KokkosKernels_config.tmp)

#==== Update the config file if necessary =================================================

KOKKOSKERNELS_INTERNAL_LS_CONFIG := $(shell ls KokkosKernels_config.h)
ifeq ($(KOKKOSKERNELS_INTERNAL_LS_CONFIG), KokkosKernels_config.h)
  KOKKOSKERNELS_INTERNAL_NEW_CONFIG := $(strip $(shell diff KokkosKernels_config.h KokkosKernels_config.tmp | grep define | wc -l))
else
  KOKKOSKERNELS_INTERNAL_NEW_CONFIG := 1
endif

ifneq ($(KOKKOSKERNELS_INTERNAL_NEW_CONFIG), 0)
  tmp := $(shell cp KokkosKernels_config.tmp KokkosKernels_config.h)
endif

#include $(KOKKOSKERNELS_PATH)/Makefile.generate_eti_files

#-------------------------------------------------------------------------
#-----Add src Files-------------------------------------
#-------------------------------------------------------------------------

KOKKOSKERNELS_INTERNAL_SRC_BLAS =
KOKKOSKERNELS_INTERNAL_SRC_SPARSE =

ifeq ($(KOKKOSKERNELS_INTERNAL_INST_EXECSPACE_SERIAL), 1)
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_DOUBLE), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_double*Serial*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_double*Serial*.cpp)
  endif
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_FLOAT), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_float*Serial*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_float*Serial*.cpp)
  endif
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_COMPLEX_DOUBLE_), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_Kokkos_complex_double*Serial*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_Kokkos_complex_double*Serial*.cpp)
  endif
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_COMPLEX_FLOAT_), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_Kokkos_complex_float*Serial*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_Kokkos_complex_float*Serial*.cpp)
  endif
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_EXECSPACE_OPENMP), 1)
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_DOUBLE), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_double*OpenMP_*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_double*OpenMP_*.cpp)
  endif
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_FLOAT), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_float*OpenMP_*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_float*OpenMP_*.cpp)
  endif
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_COMPLEX_DOUBLE_), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_Kokkos_complex_double*OpenMP_*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_Kokkos_complex_double*OpenMP_*.cpp)
  endif
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_COMPLEX_FLOAT_), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_Kokkos_complex_float*OpenMP_*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_Kokkos_complex_float*OpenMP_*.cpp)
  endif
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_EXECSPACE_THREADS), 1)
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_DOUBLE), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_double*Threads_*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_double*Threads_*.cpp)
  endif
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_FLOAT), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_float*Threads_*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_float*Threads_*.cpp)
  endif
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_COMPLEX_DOUBLE_), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_Kokkos_complex_double*Threads_*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_Kokkos_complex_double*Threads_*.cpp)
  endif
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_COMPLEX_FLOAT_), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_Kokkos_complex_float*Threads_*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_Kokkos_complex_float*Threads_*.cpp)
  endif
endif
ifeq ($(KOKKOSKERNELS_INTERNAL_INST_EXECSPACE_CUDA), 1)
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_DOUBLE), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_double*Cuda_*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_double*Cuda_*.cpp)
  endif
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_FLOAT), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_float*Cuda_*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_float*Cuda_*.cpp)
  endif
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_COMPLEX_DOUBLE_), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_Kokkos_complex_double*Cuda_*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_Kokkos_complex_double*Cuda_*.cpp)
  endif
  ifeq ($(KOKKOSKERNELS_INTERNAL_INST_COMPLEX_FLOAT_), 1)
    KOKKOSKERNELS_INTERNAL_SRC_BLAS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosBlas*eti_spec_inst_Kokkos_complex_float*Cuda_*.cpp)
    KOKKOSKERNELS_INTERNAL_SRC_SPARSE += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_cpp/*/KokkosSparse*eti_spec_inst_Kokkos_complex_float*Cuda_*.cpp)
  endif
endif

ifeq (${KOKKOSKERNELS_INTERNAL_ENABLE_CUBLAS}, 1)
  KOKKOSKERNELS_INTERNAL_SRC_BLAS += ${KOKKOSKERNELS_PATH}/src/impl/tpls/KokkosBlas_Cuda_tpl.cpp
endif

KOKKOSKERNELS_INTERNAL_HEADERS = $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/*.hpp)
KOKKOSKERNELS_INTERNAL_HEADERS += $(wildcard ${KOKKOSKERNELS_PATH}/src/impl/generated_specializations_hpp/*/*eti_spec*.hpp)

ifdef KOKKOSKERNELS_INTERNAL_SRC_SPARSE
vpath %.cpp $(sort $(dir $(KOKKOSKERNELS_INTERNAL_SRC_SPARSE)))
vpath %.cpp $(sort $(dir $(KOKKOSKERNELS_INTERNAL_SRC_BLAS)))
endif

DEPFLAGS = -M

ifeq ($(KOKKOS_OS),CYGWIN)
  COPY_FLAG = -u
endif
ifeq ($(KOKKOS_OS),Linux)
  COPY_FLAG = -u
endif
ifeq ($(KOKKOS_OS),Darwin)
  COPY_FLAG =
endif

KOKKOSKERNELS_INTERNAL_SRC_BLAS_NODIR = $(notdir $(KOKKOSKERNELS_INTERNAL_SRC_BLAS))
KOKKOSKERNELS_INTERNAL_SRC_SPARSE_NODIR = $(notdir $(KOKKOSKERNELS_INTERNAL_SRC_SPARSE))
KOKKOSKERNELS_INTERNAL_OBJ_BLAS = $(KOKKOSKERNELS_INTERNAL_SRC_BLAS_NODIR:.cpp=.o)
KOKKOSKERNELS_INTERNAL_OBJ_SPARSE = $(KOKKOSKERNELS_INTERNAL_SRC_SPARSE_NODIR:.cpp=.o)

KOKKOSKERNELS_CPP_DEPENDS = $(KOKKOSKERNELS_INTERNAL_HEADERS) KokkosKernels_config.h

KokkosKernels_config.h:

kokkoskernels-build-lib: $(KOKKOSKERNELS_INTERNAL_LIBRARY)

$(KOKKOSKERNELS_INTERNAL_LIBRARY): $(KOKKOSKERNELS_INTERNAL_OBJ_SPARSE) $(KOKKOSKERNELS_INTERNAL_OBJ_BLAS)
	ar cr ${KOKKOSKERNELS_INTERNAL_LIBRARY} $(KOKKOSKERNELS_INTERNAL_OBJ_SPARSE) $(KOKKOSKERNELS_INTERNAL_OBJ_BLAS)
	ranlib ${KOKKOSKERNELS_INTERNAL_LIBRARY}

kokkoskernels-clean: kokkos-clean
	rm -f *.o $(KOKKOSKERNELS_INTERNAL_LIBRARY) KokkosKernels_config.h KokkosKernels_config.tmp

# Compilation rules

$(filter %.o,$(KOKKOSKERNELS_INTERNAL_OBJ_BLAS)): %.o:%.cpp $(KOKKOS_CPP_DEPENDS) ${KOKKOSKERNELS_CPP_DEPENDS} KokkosKernels_config.h
	$(CXX) $(KOKKOS_CPPFLAGS) $(KOKKOSKERNELS_CPPFLAGS) $(KOKKOS_CXXFLAGS) $(CXXFLAGS) $(EXTRA_INC) -c $<
$(filter %.o,$(KOKKOSKERNELS_INTERNAL_OBJ_SPARSE)): %.o:%.cpp $(KOKKOS_CPP_DEPENDS) ${KOKKOSKERNELS_CPP_DEPENDS} KokkosKernels_config.h
	$(CXX) $(KOKKOS_CPPFLAGS) $(KOKKOSKERNELS_CPPFLAGS) $(KOKKOS_CXXFLAGS) $(CXXFLAGS) $(EXTRA_INC) -c $<
	
