Clearing old data (if any)

Level 0
Setup Smoother (MueLu::IfpackSmoother{type = point relaxation stand-alone})
smoother -> 
 relaxation: type = symmetric Gauss-Seidel   [unused]
 relaxation: sweeps = 2   [unused]
 relaxation: damping factor = 1   [unused]

Level 1
Build (MueLu::RebalanceTransferFactory)
Prolongator smoothing (MueLu::SaPFactory)
Matrix filtering (MueLu::FilteredAFactory)
Build (MueLu::CoalesceDropFactory)
Build (MueLu::AmalgamationFactory)
[empty list]
algorithm = "distance laplacian" distance laplacian algorithm = "default": threshold = 0.01, blocksize = 1
aggregation: drop tol = 0.01
aggregation: use ml scaling of drop tol = 1
aggregation: drop scheme = distance laplacian
lightweight wrap = 1
Lumping dropped entries
Reusing graph
Build (MueLu::TentativePFactory)
Build (MueLu::UncoupledAggregationFactory)
BuildAggregatesNonKokkos (Phase - (Dirichlet))
BuildAggregatesNonKokkos (Phase 1 (main))
BuildAggregatesNonKokkos (Phase 2a (secondary))
BuildAggregatesNonKokkos (Phase 2b (expansion))
BuildAggregatesNonKokkos (Phase 3 (cleanup))
aggregation: match ML phase1 = 1   [unused]
aggregation: match ML phase2a = 1   [unused]
aggregation: match ML phase2b = 1   [unused]
Nullspace factory (MueLu::NullspaceFactory)
Fine level nullspace = Nullspace
Build (MueLu::CoarseMapFactory)
matrixmatrix: kernel params -> 
 [empty list]
sa: damping factor = 1.333
sa: eigenvalue estimate num iterations = 10
matrixmatrix: kernel params -> 
 [empty list]
Build (MueLu::RepartitionFactory)
Computing Ac (MueLu::RAPFactory)
Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]
RAPFactory: call transfer factory: MueLu::CoordinatesTransferFactory
Build (MueLu::CoordinatesTransferFactory)
Transferring coordinates
matrixmatrix: kernel params -> 
 [empty list]
Build (MueLu::RepartitionHeuristicFactory)
Build (MueLu::Zoltan2Interface)
ParameterList = Teuchos::RCP<Teuchos::ParameterList const>{<ignored>}   [unused]
No repartitioning necessary: partitions were left unchanged by the repartitioner
Using original prolongator
type = Interpolation
Build (MueLu::RebalanceTransferFactory)
Using original restrictor
type = Restriction
Computing Ac (MueLu::RebalanceAcFactory)
Setup Smoother (MueLu::AmesosSmoother{type = <ignored>})
smoother -> 
 [empty list]

--------------------------------------------------------------------------------
---                            Multigrid Summary                             ---
--------------------------------------------------------------------------------
Number of levels    = 2
Operator complexity = 1.33
Smoother complexity = <ignored>
Cycle type          = V

level  rows  nnz    nnz/row  c ratio  procs
  0  9999  29995  3.00                  1  
  1  3333  9997   3.00     3.00         1  

Smoother (level 0) both : MueLu::IfpackSmoother{type = point relaxation stand-alone}

Smoother (level 1) pre  : MueLu::AmesosSmoother{type = <ignored>}
Smoother (level 1) post : no smoother

