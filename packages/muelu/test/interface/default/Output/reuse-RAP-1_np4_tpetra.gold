Clearing old data (if any)

Level 0
Setup Smoother (MueLu::Ifpack2Smoother{type = RELAXATION})
keep smoother data = 1
smoother -> 
 relaxation: type = Symmetric Gauss-Seidel
 relaxation: sweeps = 1
 relaxation: damping factor = 1

Level 1
Build (MueLu::RebalanceTransferFactory)
Prolongator smoothing (MueLu::SaPFactory)
Matrix filtering (MueLu::FilteredAFactory)
Build (MueLu::CoalesceDropFactory)
Build (MueLu::AmalgamationFactory)
[empty list]
algorithm = "classical" classical algorithm = "default": threshold = 0, blocksize = 1
lightweight wrap = 1
Filtered matrix is not being constructed as no filtering is being done
Build (MueLu::TentativePFactory)
Build (MueLu::UncoupledAggregationFactory)
BuildAggregates (Phase - (Dirichlet))
BuildAggregates (Phase 1 (main))
BuildAggregates (Phase 2a (secondary))
BuildAggregates (Phase 2b (expansion))
BuildAggregates (Phase 3 (cleanup))
Nullspace factory (MueLu::NullspaceFactory)
Fine level nullspace = Nullspace
Build (MueLu::CoarseMapFactory)
matrixmatrix: kernel params -> 
 [empty list]
matrixmatrix: kernel params -> 
 [empty list]
Build (MueLu::RepartitionFactory)
Computing Ac (MueLu::RAPFactory)
Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]
RAPFactory: call transfer factory: MueLu::CoordinatesTransferFactory
Build (MueLu::CoordinatesTransferFactory)
Transferring coordinates
matrixmatrix: kernel params -> 
 [empty list]
Build (MueLu::RepartitionHeuristicFactory)
Build (MueLu::Zoltan2Interface)
ParameterList = Teuchos::RCP<Teuchos::ParameterList const>{<ignored>}   [unused]
No repartitioning necessary: partitions were left unchanged by the repartitioner
Using original prolongator
repartition: rebalance P and R = 1
type = Interpolation
Build (MueLu::RebalanceTransferFactory)
Using original restrictor
repartition: rebalance P and R = 1
type = Restriction
Computing Ac (MueLu::RebalanceAcFactory)
Setup Smoother (MueLu::Ifpack2Smoother{type = RELAXATION})
keep smoother data = 1
smoother -> 
 relaxation: type = Symmetric Gauss-Seidel
 relaxation: sweeps = 1
 relaxation: damping factor = 1

Level 2
Build (MueLu::RebalanceTransferFactory)
Prolongator smoothing (MueLu::SaPFactory)
Matrix filtering (MueLu::FilteredAFactory)
Build (MueLu::CoalesceDropFactory)
Build (MueLu::AmalgamationFactory)
[empty list]
algorithm = "classical" classical algorithm = "default": threshold = 0, blocksize = 1
lightweight wrap = 1
Filtered matrix is not being constructed as no filtering is being done
Build (MueLu::TentativePFactory)
Build (MueLu::UncoupledAggregationFactory)
BuildAggregates (Phase - (Dirichlet))
BuildAggregates (Phase 1 (main))
BuildAggregates (Phase 2a (secondary))
BuildAggregates (Phase 2b (expansion))
BuildAggregates (Phase 3 (cleanup))
Nullspace factory (MueLu::NullspaceFactory)
Fine level nullspace = Nullspace
Build (MueLu::CoarseMapFactory)
matrixmatrix: kernel params -> 
 [empty list]
matrixmatrix: kernel params -> 
 [empty list]
Build (MueLu::RepartitionFactory)
Computing Ac (MueLu::RAPFactory)
Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]
RAPFactory: call transfer factory: MueLu::CoordinatesTransferFactory
Build (MueLu::CoordinatesTransferFactory)
Transferring coordinates
matrixmatrix: kernel params -> 
 [empty list]
Build (MueLu::RepartitionHeuristicFactory)
Build (MueLu::Zoltan2Interface)
ParameterList = Teuchos::RCP<Teuchos::ParameterList const>{<ignored>}   [unused]
Only one partition: Skip call to the repartitioner.
repartition: rebalance P and R = 1
type = Interpolation
Build (MueLu::RebalanceTransferFactory)
repartition: rebalance P and R = 1
type = Restriction
Computing Ac (MueLu::RebalanceAcFactory)
Replacing maps with a subcommunicator

--------------------------------------------------------------------------------
---                            Multigrid Summary                             ---
--------------------------------------------------------------------------------
Number of levels    = 3
Operator complexity = 1.45
Smoother complexity = 1.78
Cycle type          = V

level  rows  nnz    nnz/row  c ratio  procs
  0  9999  29995  3.00                  4  
  1  3335  10015  3.00     3.00         4  
  2  1112  3340   3.00     3.00         1  

Smoother (level 0) both : "Ifpack2::Relaxation": {Initialized: true, Computed: true, Type: Symmetric Gauss-Seidel, sweeps: 1, damping factor: 1, Global matrix dimensions: [9999, 9999], Global nnz: 29995}

Smoother (level 1) both : "Ifpack2::Relaxation": {Initialized: true, Computed: true, Type: Symmetric Gauss-Seidel, sweeps: 1, damping factor: 1, Global matrix dimensions: [3335, 3335], Global nnz: 10015}

Smoother (level 2) pre  : <Direct> solver interface
Smoother (level 2) post : no smoother

Clearing old data (if any)

Level 0
Setup Smoother ("Ifpack2::Relaxation": {Initialized: true, Computed: true, Type: Symmetric Gauss-Seidel, sweeps: 1, damping factor: 1, Global matrix dimensions: [9999, 9999], Global nnz: 29995})
keep smoother data = 1
smoother -> 
 relaxation: type = Symmetric Gauss-Seidel
 relaxation: sweeps = 1
 relaxation: damping factor = 1

Level 1

Level 2

--------------------------------------------------------------------------------
---                            Multigrid Summary                             ---
--------------------------------------------------------------------------------
Number of levels    = 3
Operator complexity = 1.45
Smoother complexity = 1.78
Cycle type          = V

level  rows  nnz    nnz/row  c ratio  procs
  0  9999  29995  3.00                  4  
  1  3335  10015  3.00     3.00         4  
  2  1112  3340   3.00     3.00         1  

Smoother (level 0) both : "Ifpack2::Relaxation": {Initialized: true, Computed: true, Type: Symmetric Gauss-Seidel, sweeps: 1, damping factor: 1, Global matrix dimensions: [9999, 9999], Global nnz: 29995}

Smoother (level 1) both : "Ifpack2::Relaxation": {Initialized: true, Computed: true, Type: Symmetric Gauss-Seidel, sweeps: 1, damping factor: 1, Global matrix dimensions: [3335, 3335], Global nnz: 10015}

Smoother (level 2) pre  : <Direct> solver interface
Smoother (level 2) post : no smoother

Setup Smoother (MueLu::Amesos2Smoother{type = <ignored>})
keep smoother data = 1
presmoother -> 
 Amesos2 -> 
  [empty list]
