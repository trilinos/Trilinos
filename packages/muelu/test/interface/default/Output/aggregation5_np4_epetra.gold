Clearing old data (if any)
Level 0
Setup Smoother (MueLu::IfpackSmoother{type = point relaxation stand-alone})
keep smoother data = 0   [default]
PreSmoother data = Teuchos::RCP<MueLu::SmootherPrototype<ignored> >{ptr=0,node=0,strong_count=0,weak_count=0}   [default]
PostSmoother data = Teuchos::RCP<MueLu::SmootherPrototype<ignored> >{ptr=0,node=0,strong_count=0,weak_count=0}   [default]
smoother -> 
 relaxation: type = symmetric Gauss-Seidel   [unused]
 relaxation: sweeps = 1   [unused]
 relaxation: damping factor = 1   [unused]

Level 1
Prolongator smoothing (MueLu::SaPFactory)
Matrix filtering (MueLu::FilteredAFactory)
Build (MueLu::CoalesceDropFactory)
Build (MueLu::AmalgamationFactory)
[empty list]

algorithm = "classical": threshold = 0, blocksize = 1
aggregation: drop tol = 0   [default]
aggregation: Dirichlet threshold = 0   [default]
aggregation: drop scheme = classical   [default]
lightweight wrap = 1

Filtered matrix is not being constructed as no filtering is being done
filtered matrix: use lumping = 1   [default]
filtered matrix: reuse graph = 1   [default]
filtered matrix: reuse eigenvalue = 1   [default]

Build (MueLu::TentativePFactory)
Build (MueLu::BrickAggregationFactory)
Using brick size: 3
aggregation: brick x size = 3
aggregation: brick y size = 2   [default]
aggregation: brick z size = 2   [default]

Nullspace factory (MueLu::NullspaceFactory)
Fine level nullspace = Nullspace

Build (MueLu::CoarseMapFactory)
Striding info = {}   [default]
Strided block id = -1   [default]
Domain GID offsets = {0}   [default]

tentative: calculate qr = 1   [default]
tentative: build coarse coordinates = 1   [default]
matrixmatrix: kernel params -> 
 [empty list]

sa: damping factor = 1.33   [default]
sa: calculate eigenvalue estimate = 0   [default]
sa: eigenvalue estimate num iterations = 10   [default]
matrixmatrix: kernel params -> 
 [empty list]

Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]

Computing Ac (MueLu::RAPFactory)
RAPFactory: call transfer factory: MueLu::CoordinatesTransferFactory
Build (MueLu::CoordinatesTransferFactory)
Transferring coordinates
structured aggregation = 0   [default]
aggregation coupled = 0   [default]
Geometric = 0   [default]
write start = -1   [default]
write end = -1   [default]
hybrid aggregation = 0   [default]

transpose: use implicit = 0   [default]
rap: triple product = 0   [default]
rap: fix zero diagonals = 0   [default]
CheckMainDiagonal = 0   [default]
RepairMainDiagonal = 0   [default]
matrixmatrix: kernel params -> 
 [empty list]

Setup Smoother (MueLu::IfpackSmoother{type = point relaxation stand-alone})
keep smoother data = 0   [default]
PreSmoother data = Teuchos::RCP<MueLu::SmootherPrototype<ignored> >{ptr=0,node=0,strong_count=0,weak_count=0}   [default]
PostSmoother data = Teuchos::RCP<MueLu::SmootherPrototype<ignored> >{ptr=0,node=0,strong_count=0,weak_count=0}   [default]
smoother -> 
 relaxation: type = symmetric Gauss-Seidel   [unused]
 relaxation: sweeps = 1   [unused]
 relaxation: damping factor = 1   [unused]

Level 2
Prolongator smoothing (MueLu::SaPFactory)
Matrix filtering (MueLu::FilteredAFactory)
Build (MueLu::CoalesceDropFactory)
Build (MueLu::AmalgamationFactory)
[empty list]

algorithm = "classical": threshold = 0, blocksize = 1
aggregation: drop tol = 0   [default]
aggregation: Dirichlet threshold = 0   [default]
aggregation: drop scheme = classical   [default]
lightweight wrap = 1

Filtered matrix is not being constructed as no filtering is being done
filtered matrix: use lumping = 1   [default]
filtered matrix: reuse graph = 1   [default]
filtered matrix: reuse eigenvalue = 1   [default]

Build (MueLu::TentativePFactory)
Build (MueLu::BrickAggregationFactory)
Using brick size: 3
aggregation: brick x size = 3
aggregation: brick y size = 2   [default]
aggregation: brick z size = 2   [default]

Nullspace factory (MueLu::NullspaceFactory)
Fine level nullspace = Nullspace

Build (MueLu::CoarseMapFactory)
Striding info = {}   [default]
Strided block id = -1   [default]
Domain GID offsets = {0}   [default]

tentative: calculate qr = 1   [default]
tentative: build coarse coordinates = 1   [default]
matrixmatrix: kernel params -> 
 [empty list]

sa: damping factor = 1.33   [default]
sa: calculate eigenvalue estimate = 0   [default]
sa: eigenvalue estimate num iterations = 10   [default]
matrixmatrix: kernel params -> 
 [empty list]

Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]

Computing Ac (MueLu::RAPFactory)
RAPFactory: call transfer factory: MueLu::CoordinatesTransferFactory
Build (MueLu::CoordinatesTransferFactory)
Transferring coordinates
structured aggregation = 0   [default]
aggregation coupled = 0   [default]
Geometric = 0   [default]
write start = -1   [default]
write end = -1   [default]
hybrid aggregation = 0   [default]

transpose: use implicit = 0   [default]
rap: triple product = 0   [default]
rap: fix zero diagonals = 0   [default]
CheckMainDiagonal = 0   [default]
RepairMainDiagonal = 0   [default]
matrixmatrix: kernel params -> 
 [empty list]

Max coarse size (<= 2000) achieved
Setup Smoother (MueLu::AmesosSmoother{type = <ignored>})
keep smoother data = 0   [default]
PreSmoother data = Teuchos::RCP<MueLu::SmootherPrototype<ignored> >{ptr=0,node=0,strong_count=0,weak_count=0}   [default]
PostSmoother data = Teuchos::RCP<MueLu::SmootherPrototype<ignored> >{ptr=0,node=0,strong_count=0,weak_count=0}   [default]
presmoother -> 
 [empty list]


--------------------------------------------------------------------------------
---                            Multigrid Summary                             ---
--------------------------------------------------------------------------------
Number of levels    = 3
Operator complexity = 1.44
Smoother complexity = 0.00
Cycle type          = V

level  rows  nnz    nnz/row  c ratio  procs
  0  9999  29995  3.00                  4  
  1  3333  9997   3.00     3.00         4  
  2  1111  3331   3.00     3.00         4  

Smoother (level 0) both : MueLu::IfpackSmoother{type = point relaxation stand-alone}

Smoother (level 1) both : MueLu::IfpackSmoother{type = point relaxation stand-alone}

Smoother (level 2) pre  : MueLu::AmesosSmoother{type = <ignored>}
Smoother (level 2) post : no smoother

