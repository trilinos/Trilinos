Clearing old data (if any)
Level 0
Setup Smoother (MueLu::IfpackSmoother{type = point relaxation stand-alone})
smoother -> 
 relaxation: type = symmetric Gauss-Seidel   [unused]
 relaxation: sweeps = 2   [unused]
 relaxation: damping factor = 1   [unused]
Level 1
Prolongator smoothing (MueLu::SaPFactory)
Matrix filtering (MueLu::FilteredAFactory)
Build (MueLu::CoalesceDropFactory)
Build (MueLu::AmalgamationFactory)
[empty list]
algorithm = "classical" classical algorithm = "default": threshold = 0, blocksize = 1
lightweight wrap = 1
Filtered matrix is not being constructed as no filtering is being done
Build (MueLu::TentativePFactory)
Build (MueLu::UncoupledAggregationFactory)
BuildAggregates (Phase - (Dirichlet))
BuildAggregates (Phase 1 (main))
BuildAggregates (Phase 2a (secondary))
BuildAggregates (Phase 2b (expansion))
BuildAggregates (Phase 3 (cleanup))
Nullspace factory (MueLu::NullspaceFactory)
Fine level nullspace = Nullspace
Build (MueLu::CoarseMapFactory)
matrixmatrix: kernel params -> 
 [empty list]
sa: damping factor = 1.333
sa: eigenvalue estimate num iterations = 10
matrixmatrix: kernel params -> 
 [empty list]
Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]
Computing Ac (MueLu::RAPFactory)
matrixmatrix: kernel params -> 
 [empty list]
Setup Smoother (MueLu::IfpackSmoother{type = point relaxation stand-alone})
smoother -> 
 relaxation: type = symmetric Gauss-Seidel   [unused]
 relaxation: sweeps = 2   [unused]
 relaxation: damping factor = 1   [unused]
Level 2
Prolongator smoothing (MueLu::SaPFactory)
Matrix filtering (MueLu::FilteredAFactory)
Build (MueLu::CoalesceDropFactory)
Build (MueLu::AmalgamationFactory)
[empty list]
algorithm = "classical" classical algorithm = "default": threshold = 0, blocksize = 1
lightweight wrap = 1
Filtered matrix is not being constructed as no filtering is being done
Build (MueLu::TentativePFactory)
Build (MueLu::UncoupledAggregationFactory)
BuildAggregates (Phase - (Dirichlet))
BuildAggregates (Phase 1 (main))
BuildAggregates (Phase 2a (secondary))
BuildAggregates (Phase 2b (expansion))
BuildAggregates (Phase 3 (cleanup))
Nullspace factory (MueLu::NullspaceFactory)
Fine level nullspace = Nullspace
Build (MueLu::CoarseMapFactory)
matrixmatrix: kernel params -> 
 [empty list]
sa: damping factor = 1.333
sa: eigenvalue estimate num iterations = 10
matrixmatrix: kernel params -> 
 [empty list]
Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]
Computing Ac (MueLu::RAPFactory)
matrixmatrix: kernel params -> 
 [empty list]
Setup Smoother (MueLu::IfpackSmoother{type = point relaxation stand-alone})
smoother -> 
 relaxation: type = symmetric Gauss-Seidel   [unused]
 relaxation: sweeps = 2   [unused]
 relaxation: damping factor = 1   [unused]
Level 3
Prolongator smoothing (MueLu::SaPFactory)
Matrix filtering (MueLu::FilteredAFactory)
Build (MueLu::CoalesceDropFactory)
Build (MueLu::AmalgamationFactory)
[empty list]
algorithm = "classical" classical algorithm = "default": threshold = 0, blocksize = 1
lightweight wrap = 1
Filtered matrix is not being constructed as no filtering is being done
Build (MueLu::TentativePFactory)
Build (MueLu::UncoupledAggregationFactory)
BuildAggregates (Phase - (Dirichlet))
BuildAggregates (Phase 1 (main))
BuildAggregates (Phase 2a (secondary))
BuildAggregates (Phase 2b (expansion))
BuildAggregates (Phase 3 (cleanup))
Nullspace factory (MueLu::NullspaceFactory)
Fine level nullspace = Nullspace
Build (MueLu::CoarseMapFactory)
matrixmatrix: kernel params -> 
 [empty list]
sa: damping factor = 1.333
sa: eigenvalue estimate num iterations = 10
matrixmatrix: kernel params -> 
 [empty list]
Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]
Computing Ac (MueLu::RAPFactory)
matrixmatrix: kernel params -> 
 [empty list]
Setup Smoother (MueLu::IfpackSmoother{type = point relaxation stand-alone})
smoother -> 
 relaxation: type = symmetric Gauss-Seidel   [unused]
 relaxation: sweeps = 2   [unused]
 relaxation: damping factor = 1   [unused]
Level 4
Prolongator smoothing (MueLu::SaPFactory)
Matrix filtering (MueLu::FilteredAFactory)
Build (MueLu::CoalesceDropFactory)
Build (MueLu::AmalgamationFactory)
[empty list]
algorithm = "classical" classical algorithm = "default": threshold = 0, blocksize = 1
lightweight wrap = 1
Filtered matrix is not being constructed as no filtering is being done
Build (MueLu::TentativePFactory)
Build (MueLu::UncoupledAggregationFactory)
BuildAggregates (Phase - (Dirichlet))
BuildAggregates (Phase 1 (main))
BuildAggregates (Phase 2a (secondary))
BuildAggregates (Phase 2b (expansion))
BuildAggregates (Phase 3 (cleanup))
Nullspace factory (MueLu::NullspaceFactory)
Fine level nullspace = Nullspace
Build (MueLu::CoarseMapFactory)
matrixmatrix: kernel params -> 
 [empty list]
sa: damping factor = 1.333
sa: eigenvalue estimate num iterations = 10
matrixmatrix: kernel params -> 
 [empty list]
Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]
Computing Ac (MueLu::RAPFactory)
matrixmatrix: kernel params -> 
 [empty list]
Max coarse size (<= 128) achieved
Setup Smoother (MueLu::IfpackSmoother{type = point relaxation stand-alone})
smoother -> 
 relaxation: type = Gauss-Seidel   [unused]
 relaxation: sweeps = 25   [unused]
 relaxation: damping factor = 0.6   [unused]

--------------------------------------------------------------------------------
---                            Multigrid Summary                             ---
--------------------------------------------------------------------------------
Number of levels    = 5
Operator complexity = 1.49
Smoother complexity = 0.00
Cycle type          = V

level  rows  nnz    nnz/row  c ratio  procs
  0  9999  29995  3.00                  1  
  1  3333  9997   3.00     3.00         1  
  2  1111  3331   3.00     3.00         1  
  3  371   1111   2.99     2.99         1  
  4  124   370    2.98     2.99         1  

Smoother (level 0) both : MueLu::IfpackSmoother{type = point relaxation stand-alone}

Smoother (level 1) both : MueLu::IfpackSmoother{type = point relaxation stand-alone}

Smoother (level 2) both : MueLu::IfpackSmoother{type = point relaxation stand-alone}

Smoother (level 3) both : MueLu::IfpackSmoother{type = point relaxation stand-alone}

Smoother (level 4) pre  : MueLu::IfpackSmoother{type = point relaxation stand-alone}
Smoother (level 4) post : no smoother

