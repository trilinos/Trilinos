Clearing old data (if any)
Level 0
Setup Smoother (MueLu::Ifpack2Smoother{type = RELAXATION})
keep smoother data = 0   [default]
PreSmoother data = Teuchos::RCP<MueLu::SmootherPrototype<ignored> >{ptr=0,node=0,strong_count=0,weak_count=0}   [default]
PostSmoother data = Teuchos::RCP<MueLu::SmootherPrototype<ignored> >{ptr=0,node=0,strong_count=0,weak_count=0}   [default]
smoother -> 
 relaxation: type = Symmetric Gauss-Seidel
 relaxation: sweeps = 1
 relaxation: damping factor = 1
 relaxation: inner sweeps = 1   [default]
 relaxation: inner sparse-triangular solve = 0   [default]
 relaxation: zero starting solution = 1   [default]
 relaxation: backward mode = 0   [default]
 relaxation: use l1 = 0   [default]
 relaxation: l1 eta = 1.5   [default]
 relaxation: min diagonal value = 0   [default]
 relaxation: fix tiny diagonal entries = 0   [default]
 relaxation: check diagonal entries = 0   [default]
 relaxation: local smoothing indices = Teuchos::ArrayRCP<int>{ptr=0,lowerOffset=0,upperOffset=-1,size=0,node=0,strong_count=0,weak_count=0}   [default]
 relaxation: symmetric matrix structure = 0   [default]
 relaxation: ifpack2 dump matrix = 0   [default]
 relaxation: mtgs cluster size = 1   [default]

Level 1
Prolongator smoothing (MueLu::SaPFactory)
Matrix filtering (MueLu::FilteredAFactory)
Build (MueLu::CoalesceDropFactory)
Build (MueLu::AmalgamationFactory)
[empty list]

algorithm = "classical" classical algorithm = "default": threshold = 0, blocksize = 1
aggregation: drop tol = 0   [default]
aggregation: Dirichlet threshold = 10
aggregation: drop scheme = classical   [default]
aggregation: distance laplacian algo = default   [default]
aggregation: classical algo = default   [default]
lightweight wrap = 1

Filtered matrix is not being constructed as no filtering is being done
filtered matrix: use lumping = 1   [default]
filtered matrix: reuse graph = 1   [default]
filtered matrix: reuse eigenvalue = 1   [default]
filtered matrix: use root stencil = 0   [default]
filtered matrix: Dirichlet threshold = -1   [default]

Build (MueLu::TentativePFactory)
Build (MueLu::NotayAggregationFactory)
BuildInitialAggregates (MueLu::NotayAggregationFactory)
BuildOnRankLocalMatrix (MueLu::NotayAggregationFactory)
BuildIntermediateProlongator (MueLu::NotayAggregationFactory)
BuildCoarseLocalMatrix (MueLu::NotayAggregationFactory)
BuildFurtherAggregates (MueLu::NotayAggregationFactory)
BuildIntermediateProlongator (MueLu::NotayAggregationFactory)
BuildCoarseLocalMatrix (MueLu::NotayAggregationFactory)
BuildFurtherAggregates (MueLu::NotayAggregationFactory)
BuildIntermediateProlongator (MueLu::NotayAggregationFactory)
BuildCoarseLocalMatrix (MueLu::NotayAggregationFactory)
BuildFurtherAggregates (MueLu::NotayAggregationFactory)
BuildIntermediateProlongator (MueLu::NotayAggregationFactory)
BuildCoarseLocalMatrix (MueLu::NotayAggregationFactory)
BuildFurtherAggregates (MueLu::NotayAggregationFactory)
BuildIntermediateProlongator (MueLu::NotayAggregationFactory)
BuildCoarseLocalMatrix (MueLu::NotayAggregationFactory)
BuildFurtherAggregates (MueLu::NotayAggregationFactory)
BuildIntermediateProlongator (MueLu::NotayAggregationFactory)
BuildCoarseLocalMatrix (MueLu::NotayAggregationFactory)
BuildFurtherAggregates (MueLu::NotayAggregationFactory)
BuildIntermediateProlongator (MueLu::NotayAggregationFactory)
BuildCoarseLocalMatrix (MueLu::NotayAggregationFactory)
BuildFurtherAggregates (MueLu::NotayAggregationFactory)
aggregation: pairwise: size = 8   [default]
aggregation: pairwise: tie threshold = 1e-06   [default]
aggregation: compute aggregate qualities = 0   [default]
aggregation: Dirichlet threshold = 10
aggregation: ordering = natural

Nullspace factory (MueLu::NullspaceFactory)
Fine level nullspace = Nullspace

Build (MueLu::CoarseMapFactory)
Striding info = {}   [default]
Strided block id = -1   [default]
Domain GID offsets = {0}   [default]

tentative: calculate qr = 1   [default]
tentative: build coarse coordinates = 1   [default]
tentative: constant column sums = 0   [default]
Nullspace name = Nullspace   [default]
matrixmatrix: kernel params -> 
 [empty list]

sa: damping factor = 1.33   [default]
sa: calculate eigenvalue estimate = 0   [default]
sa: eigenvalue estimate num iterations = 10   [default]
matrixmatrix: kernel params -> 
 [empty list]

Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]

Computing Ac (MueLu::RAPFactory)
transpose: use implicit = 0   [default]
rap: triple product = 0   [default]
rap: fix zero diagonals = 0   [default]
rap: relative diagonal floor = {}   [default]
CheckMainDiagonal = 0   [default]
RepairMainDiagonal = 0   [default]
matrixmatrix: kernel params -> 
 [empty list]

Setup Smoother (MueLu::Amesos2Smoother{type = <ignored>})
keep smoother data = 0   [default]
PreSmoother data = Teuchos::RCP<MueLu::SmootherPrototype<ignored> >{ptr=0,node=0,strong_count=0,weak_count=0}   [default]
PostSmoother data = Teuchos::RCP<MueLu::SmootherPrototype<ignored> >{ptr=0,node=0,strong_count=0,weak_count=0}   [default]
presmoother -> 
 A = Teuchos::RCP<MueLu::FactoryBase const>{ptr=0,node=0,strong_count=0,weak_count=0}   [default]
 Nullspace = Teuchos::RCP<MueLu::FactoryBase const>{ptr=0,node=0,strong_count=0,weak_count=0}   [default]
 fix nullspace = 0   [default]


--------------------------------------------------------------------------------
---                            Multigrid Summary                             ---
--------------------------------------------------------------------------------
Number of levels    = 2
Operator complexity = 1.00
Smoother complexity = 1.33
Cycle type          = V

level  rows  nnz    nnz/row  c ratio  procs
  0  9999  29995  3.00                  1  
  1  40    118    2.95     249.97       1  

Smoother (level 0) both : "Ifpack2::Relaxation": {Initialized: true, Computed: true, Type: Symmetric Gauss-Seidel, sweeps: 1, damping factor: 1, Global matrix dimensions: [9999, 9999], Global nnz: 29995}

Smoother (level 1) pre  : <Direct> solver interface
Smoother (level 1) post : no smoother

