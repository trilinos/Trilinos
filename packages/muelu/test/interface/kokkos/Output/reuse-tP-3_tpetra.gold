Clearing old data (if any)

Level 0
Setup Smoother (MueLu::Ifpack2Smoother{type = RELAXATION})
smoother -> 
 relaxation: type = Symmetric Gauss-Seidel
 relaxation: sweeps = 1
 relaxation: damping factor = 1
 timer for apply = 0

Level 1
Build (MueLu::RebalanceTransferFactory)
Prolongator smoothing (MueLu::SaPFactory)
Build (MueLu::CoalesceDropFactory_kokkos)
Build (MueLu::AmalgamationFactory)
[empty list]
algorithm = "classical": threshold = 0, blocksize = 1
Build (MueLu::TentativePFactory_kokkos)
Build (MueLu::UncoupledAggregationFactory)
BuildAggregates (Phase - (Dirichlet))
BuildAggregatesRandom (Phase 1 (main))
BuildAggregatesRandom (Phase 2a (secondary))
BuildAggregatesRandom (Phase 2b (expansion))
BuildAggregatesRandom (Phase 3 (cleanup))
Nullspace factory (MueLu::NullspaceFactory)
Fine level nullspace = Nullspace
Build (MueLu::CoarseMapFactory)
matrixmatrix: kernel params -> 
 [empty list]
matrixmatrix: kernel params -> 
 [empty list]
Build (MueLu::RepartitionFactory)
Computing Ac (MueLu::RAPFactory)
Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]
RAPFactory: call transfer factory: MueLu::CoordinatesTransferFactory
Build (MueLu::CoordinatesTransferFactory)
Transferring coordinates
matrixmatrix: kernel params -> 
 [empty list]
Build (MueLu::RepartitionHeuristicFactory)
Build (MueLu::Zoltan2Interface)
ParameterList = Teuchos::RCP<Teuchos::ParameterList const>{<ignored>}   [unused]
No repartitioning necessary: partitions were left unchanged by the repartitioner
Using original prolongator
repartition: rebalance P and R = 0
type = Interpolation
Build (MueLu::RebalanceTransferFactory)
Using original restrictor
repartition: rebalance P and R = 0
type = Restriction
Computing Ac (MueLu::RebalanceAcFactory)
Setup Smoother (MueLu::Ifpack2Smoother{type = RELAXATION})
keep smoother data = 1
smoother -> 
 relaxation: type = Symmetric Gauss-Seidel
 relaxation: sweeps = 1
 relaxation: damping factor = 1
 timer for apply = 0

Level 2
Build (MueLu::RebalanceTransferFactory)
Prolongator smoothing (MueLu::SaPFactory)
Build (MueLu::CoalesceDropFactory_kokkos)
Build (MueLu::AmalgamationFactory)
[empty list]
algorithm = "classical": threshold = 0, blocksize = 1
Build (MueLu::TentativePFactory_kokkos)
Build (MueLu::UncoupledAggregationFactory)
BuildAggregates (Phase - (Dirichlet))
BuildAggregatesRandom (Phase 1 (main))
BuildAggregatesRandom (Phase 2a (secondary))
BuildAggregatesRandom (Phase 2b (expansion))
BuildAggregatesRandom (Phase 3 (cleanup))
Nullspace factory (MueLu::NullspaceFactory)
Fine level nullspace = Nullspace
Build (MueLu::CoarseMapFactory)
matrixmatrix: kernel params -> 
 [empty list]
matrixmatrix: kernel params -> 
 [empty list]
Build (MueLu::RepartitionFactory)
Computing Ac (MueLu::RAPFactory)
Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]
RAPFactory: call transfer factory: MueLu::CoordinatesTransferFactory
Build (MueLu::CoordinatesTransferFactory)
Transferring coordinates
matrixmatrix: kernel params -> 
 [empty list]
Build (MueLu::RepartitionHeuristicFactory)
Build (MueLu::Zoltan2Interface)
ParameterList = Teuchos::RCP<Teuchos::ParameterList const>{<ignored>}   [unused]
No repartitioning necessary: partitions were left unchanged by the repartitioner
Using original prolongator
repartition: rebalance P and R = 0
type = Interpolation
Build (MueLu::RebalanceTransferFactory)
Using original restrictor
repartition: rebalance P and R = 0
type = Restriction
Computing Ac (MueLu::RebalanceAcFactory)
Max coarse size (<= 2000) achieved
Setup Smoother (MueLu::Amesos2Smoother{type = <ignored>})
presmoother -> 
 Amesos2 -> 
  [empty list]

--------------------------------------------------------------------------------
---                            Multigrid Summary                             ---
--------------------------------------------------------------------------------
Number of levels    = 3
Operator complexity = 1.44
Smoother complexity = <ignored>
Cycle type          = V

level  rows  nnz    nnz/row  c ratio  procs
  0  9999  29995  3.00                  1  
  1  3333  9997   3.00     3.00         1  
  2  1111  3331   3.00     3.00         1  

Smoother (level 0) both : "Ifpack2::Relaxation": {Initialized: true, Computed: true, Type: Symmetric Gauss-Seidel, sweeps: 1, damping factor: 1, Global matrix dimensions: [9999, 9999], Global nnz: 29995}

Smoother (level 1) both : "Ifpack2::Relaxation": {Initialized: true, Computed: true, Type: Symmetric Gauss-Seidel, sweeps: 1, damping factor: 1, Global matrix dimensions: [3333, 3333], Global nnz: 9997}

Smoother (level 2) pre  : <Direct> solver interface
Smoother (level 2) post : no smoother

Clearing old data (if any)

Level 0
Setup Smoother (MueLu::Ifpack2Smoother{type = RELAXATION})
smoother -> 
 relaxation: type = Symmetric Gauss-Seidel
 relaxation: sweeps = 1
 relaxation: damping factor = 1
 timer for apply = 0

Level 1
Build (MueLu::RebalanceTransferFactory)
Prolongator smoothing (MueLu::SaPFactory)
Build (MueLu::CoalesceDropFactory_kokkos)
Build (MueLu::AmalgamationFactory)
[empty list]
algorithm = "classical": threshold = 0, blocksize = 1
Reusing previous AP data
matrixmatrix: kernel params -> 
 [empty list]
Using original prolongator
repartition: rebalance P and R = 0
type = Interpolation
Build (MueLu::RebalanceTransferFactory)
Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]
Using original restrictor
repartition: rebalance P and R = 0
type = Restriction
Computing Ac (MueLu::RebalanceAcFactory)
Computing Ac (MueLu::RAPFactory)
Reusing previous AP data
Reusing previous RAP data
RAPFactory: call transfer factory: MueLu::CoordinatesTransferFactory
Build (MueLu::CoordinatesTransferFactory)
Transferring coordinates
Reusing coordinates
matrixmatrix: kernel params -> 
 [empty list]
Setup Smoother ("Ifpack2::Relaxation": {Initialized: true, Computed: true, Type: Symmetric Gauss-Seidel, sweeps: 1, damping factor: 1, Global matrix dimensions: [3333, 3333], Global nnz: 9997})
keep smoother data = 1
smoother -> 
 relaxation: type = Symmetric Gauss-Seidel
 relaxation: sweeps = 1
 relaxation: damping factor = 1
 timer for apply = 0

Level 2
Build (MueLu::RebalanceTransferFactory)
Prolongator smoothing (MueLu::SaPFactory)
Build (MueLu::CoalesceDropFactory_kokkos)
Build (MueLu::AmalgamationFactory)
[empty list]
algorithm = "classical": threshold = 0, blocksize = 1
Build (MueLu::TentativePFactory_kokkos)
Build (MueLu::UncoupledAggregationFactory)
BuildAggregates (Phase - (Dirichlet))
BuildAggregatesRandom (Phase 1 (main))
BuildAggregatesRandom (Phase 2a (secondary))
BuildAggregatesRandom (Phase 2b (expansion))
BuildAggregatesRandom (Phase 3 (cleanup))
Nullspace factory (MueLu::NullspaceFactory)
Fine level nullspace = Nullspace
Build (MueLu::CoarseMapFactory)
matrixmatrix: kernel params -> 
 [empty list]
matrixmatrix: kernel params -> 
 [empty list]
Build (MueLu::RepartitionFactory)
Computing Ac (MueLu::RAPFactory)
Transpose P (MueLu::TransPFactory)
matrixmatrix: kernel params -> 
 [empty list]
RAPFactory: call transfer factory: MueLu::CoordinatesTransferFactory
Build (MueLu::CoordinatesTransferFactory)
Transferring coordinates
matrixmatrix: kernel params -> 
 [empty list]
Build (MueLu::RepartitionHeuristicFactory)
Build (MueLu::Zoltan2Interface)
ParameterList = Teuchos::RCP<Teuchos::ParameterList const>{<ignored>}   [unused]
No repartitioning necessary: partitions were left unchanged by the repartitioner
Using original prolongator
repartition: rebalance P and R = 0
type = Interpolation
Build (MueLu::RebalanceTransferFactory)
Using original restrictor
repartition: rebalance P and R = 0
type = Restriction
Computing Ac (MueLu::RebalanceAcFactory)
Setup Smoother (MueLu::Amesos2Smoother{type = <ignored>})
presmoother -> 
 Amesos2 -> 
  [empty list]

--------------------------------------------------------------------------------
---                            Multigrid Summary                             ---
--------------------------------------------------------------------------------
Number of levels    = 3
Operator complexity = 1.44
Smoother complexity = <ignored>
Cycle type          = V

level  rows  nnz    nnz/row  c ratio  procs
  0  9999  29995  3.00                  1  
  1  3333  9997   3.00     3.00         1  
  2  1111  3331   3.00     3.00         1  

Smoother (level 0) both : "Ifpack2::Relaxation": {Initialized: true, Computed: true, Type: Symmetric Gauss-Seidel, sweeps: 1, damping factor: 1, Global matrix dimensions: [9999, 9999], Global nnz: 29995}

Smoother (level 1) both : "Ifpack2::Relaxation": {Initialized: true, Computed: true, Type: Symmetric Gauss-Seidel, sweeps: 1, damping factor: 1, Global matrix dimensions: [3333, 3333], Global nnz: 9997}

Smoother (level 2) pre  : <Direct> solver interface
Smoother (level 2) post : no smoother

