// @HEADER
// *****************************************************************************
//        MueLu: A package for multigrid based preconditioning
//
// Copyright 2012 NTESS and the MueLu contributors.
// SPDX-License-Identifier: BSD-3-Clause
// *****************************************************************************
// @HEADER

#ifndef MUELU_$CLASSNAMEUPPER_DECL_HPP
#define MUELU_$CLASSNAMEUPPER_DECL_HPP

#include "MueLu_ConfigDefs.hpp"
//#include "MueLu_ParameterListAcceptor.hpp"
#include "MueLu_$BASECLASS.hpp"
#include "MueLu_$CLASSNAME_fwd.hpp"

namespace MueLu {

  /*!
    @class $CLASSNAME class.
    @brief This file has been generated with genClass.py
  */

  $TEMPLATEDEFINITION
  class $CLASSNAME : public $BASECLASS {
#undef MUELU_$CLASSNAMEUPPER_SHORT
#include "MueLu_UseShortNames.hpp"

  public:
    //! @name Constructors/Destructors.
    //@{

    //! Constructor.
    $CLASSNAME();

    //! Destructor.
    virtual ~$CLASSNAME();

    //@}

    //! @name Input
    //@{

    /*! @brief Specifies the data that this class needs, and the factories that generate that data.

        If the Build method of this class requires some data, but the generating factory is not specified in DeclareInput, then this class
        will fall back to the settings in FactoryManager.
    */
    void $DECLAREINPUT const;

    /*! @brief define input parameters for this class
    */
    RCP<const ParameterList> GetValidParameterList(const ParameterList& paramList = ParameterList()) const;

    //@}

    //! @name Build methods.
    //@{

    //! Build an object with this factory.
    void $BUILD const;

    //@}

  private:
    // TODO add member variables

  }; // class $CLASSNAME

} // namespace MueLu

#define MUELU_$CLASSNAMEUPPER_SHORT
#endif // MUELU_$CLASSNAMEUPPER_DECL_HPP
