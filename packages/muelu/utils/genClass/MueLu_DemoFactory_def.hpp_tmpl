// @HEADER
// *****************************************************************************
//        MueLu: A package for multigrid based preconditioning
//
// Copyright 2012 NTESS and the MueLu contributors.
// SPDX-License-Identifier: BSD-3-Clause
// *****************************************************************************
// @HEADER

#ifndef MUELU_$CLASSNAMEUPPER_DEF_HPP
#define MUELU_$CLASSNAMEUPPER_DEF_HPP

#include "MueLu_$CLASSNAME_decl.hpp"

#include "MueLu_Level.hpp"


namespace MueLu {

  $SHORTTEMPLATEDEFINITION
  $CLASSNAME$TEMPLATEPARAMETERS::$CLASSNAME()
  { }

  $SHORTTEMPLATEDEFINITION
  $CLASSNAME$TEMPLATEPARAMETERS::~$CLASSNAME() {}

  $SHORTTEMPLATEDEFINITION
  RCP<const ParameterList> $CLASSNAME$TEMPLATEPARAMETERS::GetValidParameterList(const ParameterList& paramList) const {
    RCP<ParameterList> validParamList = rcp(new ParameterList());

    //validParamList->set< Scalar >                ("demo scalar",    0.0,           "only for demonstration");
    //validParamList->set< RCP<const FactoryBase> >("A",              Teuchos::null, "Generating factory of the matrix A used during the prolongator smoothing process");

    return validParamList;
  }


  $SHORTTEMPLATEDEFINITION
  void $CLASSNAME$TEMPLATEPARAMETERS::$DECLAREINPUT const {
    // TODO: declare input for factory
    //Input(currentLevel, "A");
  }

  $SHORTTEMPLATEDEFINITION
  void $CLASSNAME$TEMPLATEPARAMETERS::$BUILD const {
    // TODO: implement factory
  }

} // namespace MueLu

#define MUELU_$CLASSNAMEUPPER_SHORT
#endif // MUELU_$CLASSNAMEUPPER_DEF_HPP
