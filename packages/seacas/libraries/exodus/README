========================================================================
CONTACT:

Greg Sjaardema,
Sandia National Laboratories,
gdsjaar@sandia.gov

========================================================================
LICENSE:
The Exodus library is licensed under the terms of the BSD License. 

Legal stuff (copyright, licensing restrictions, etc.) can be found in
the file COPYRIGHT which contains:

1. The Sandia Corporation Copyright Notice.
2. The BSD License.

We appreciate feedback from users of this package.  Please send
comments, suggestions, and bug reports to Greg Sjaardema
<gdsjaar@sandia.gov>.

Please identify the version of the package.

========================================================================
BUILDING

There are 4 methods for building exodus.

1. CMAKE: Edit the cmake-script file to update library and install paths.
   The type 'sh cmake-script' to generate the Makefiles
   followed by 'make' and then 'make install'

2. SEAMS/SEACAS Build system which is based on imake.  If you have a
   SEAMS or SEACAS installation, you can use its build system.  In the
   top-level exodus directory, do 'accmkmf' followed by 'make
   Makefiles' and then 'make'

3. Makefile.standalone.  Edit the top-level Makefile.standalone file
   and specify the compiler and other options as detailed in the
   file. Then, do "make -f Makefile.standalone".

4. Building in the Trilinos system as part of the seacas package. 
   See the Trilinos documentation for more details.

Once you have built the library, you can test it by typing "make
check"


========================================================================
NETCDF

The exodus library uses the netcdf library for low-level data
storage.

Exodus requires NetCDF version 4.2.1.1 or later.

The netcdf library must be modified slightly in order to handle the
exodus datamodel. The specific changes are:

1. include/netcdf.h -- Modify the following defines:

#define NC_MAX_DIMS	65536	 /* max dimensions per file */
#define NC_MAX_VARS	524288	 /* max variables per file */
#define NC_MAX_VAR_DIMS	8        /* max per variable dimensions */

If these changes are not made, the exodus library will still function
for "normal" size models, but it will fail for "large" models. The
error message from exodus/netcdf should be somewhat clear when this
happens... 

2. I typically configure netcdf as follows:

./configure --enable-netcdf-4 --disable-fsync --disable-dap --disable-cdmremote 

Replace "--enable-netcdf-4" with "--disable-netcdf-4" to not use the
netcdf4 extensions. They are not necessarily needed for exodus, but
will provide compression, larger model sizes, and may be faster in
some cases.

3. When running the netcdf tests, you may have to do "unlimit
stacksize" (csh/tcsh) to avoid some failures due to the increased define sizes
above.

========================================================================
