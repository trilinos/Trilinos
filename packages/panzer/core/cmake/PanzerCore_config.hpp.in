#ifndef PANZER_CORE_CONFIG_HPP
#define PANZER_CORE_CONFIG_HPP

#ifndef __cplusplus
#define __cplusplus
#endif

#cmakedefine HAVE_MPI
#cmakedefine PANZER_HAVE_EPETRA

// What AD Type are you going to use?
#define PANZER_FADTYPE @Panzer_FADTYPE@
#cmakedefine PANZER_DEBUG
#cmakedefine HAVE_PANZER_EXPLICIT_INSTANTIATION
#cmakedefine PANZER_EXPLICIT_INSTANTIATION

#include "Tpetra_Details_DefaultTypes.hpp" // for ordinal types

namespace panzer {

  // Tpetra deprecated code prefers "int" over "long long" for global
  // ordinal, while non-deprecated tpetra and panzer prefer "long
  // long" over "int". This code will choose long long over int. When
  // tpetra removes deprecated code, we can just default directly to
  // tpetra.
#if defined(HAVE_TPETRA_INST_INT_LONG_LONG)
  using GlobalOrdinal = long long int;
#else
  using GlobalOrdinal = Tpetra::Details::DefaultTypes::global_ordinal_type;
#endif

  using LocalOrdinal = int;
  using index_t = int;
}

@PANZER_TEUCHOS_TIME_MONITOR_DECLARATIONS@
@PANZER_DEPRECATED_DECLARATIONS@

#endif
